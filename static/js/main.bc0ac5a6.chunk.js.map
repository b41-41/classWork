{"version":3,"sources":["fbase.js","routes/Home.js","routes/Login.js","routes/Homework.js","routes/Study.js","routes/Question.js","routes/Notice.js","component/Navigation.js","component/Router.js","component/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","authService","getAnalytics","getAuth","dbService","getFirestore","Home","useState","studyContents","setStudyContents","sendStudyContents","a","studyRef","collection","getDocs","forEach","document","studyObject","data","id","prev","sort","b","date","console","error","useEffect","class","width","src","alt","placeholder","height","map","i","title","next","Login","email","setEmail","password","setPassword","newAccount","setNewAccount","setError","onChange","event","target","name","value","onSubmit","preventDefault","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","log","message","type","required","onClick","provider","GoogleAuthProvider","signInWithPopup","GithubAuthProvider","Homework","submit","setSubmit","submits","setSubmits","content","HWContents","setHWContents","homeworkDB","getSubmits","orderBy","submitObject","deadline","sendHWContents","key","HWref","doc","getDoc","getHWContents","addDoc","serverTimestamp","docRef","stampToDate","timestamp","toDate","getMonth","getDate","chkDeadline","today","Date","maxLength","homework","getFullYear","stampToDate_yymmdd","Study","chapter","page","getStudyContents","study","Question","secret","writer","questionContents","setQuestionContents","questionDB","sendQuestionContents","questionRef","getQuestionContents","question","number","Notice","noticeContents","setNoticeContents","noticeDB","sendNoticeContents","noticeRef","getNoticeContents","notice","Layout","querySelector","style","color","history","useHistory","setNavCurrMenu","moveRoute","menu","push","currentUser","displayName","signOut","AppRouter","isLoggedIn","navBar","setNavBar","handleMobileMenu","window","innerWidth","display","addEventListener","removeEventListener","basename","Navigation","exact","path","App","init","setInit","setIsLoggedIn","onAuthStateChanged","user","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bc0ac5a6.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst firebaseApp = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nexport const authService = getAuth();\nexport const dbService = getFirestore();","import React, { useEffect, useState } from \"react\";\nimport { dbService } from 'fbase';\nimport { collection, getDocs } from \"firebase/firestore\";\n\nconst Home = () => {\n    const [studyContents, setStudyContents] = useState([]);\n\n    //최근 수업 정보 받아오기 \n    const sendStudyContents = async () => {\n        try {\n            const studyRef = collection(dbService, \"study\");\n            const getStudyContents = await getDocs(studyRef);\n            getStudyContents.forEach((document) => {\n                const studyObject = {\n                    ...document.data(),\n                    id: document.id,\n                };\n                setStudyContents((prev) => [studyObject, ...prev].sort(function (a, b) { return b.date - a.date }));\n            });\n        } catch (e) {\n            console.error(\"Error onClick: \", e);\n        }\n    };\n\n    useEffect(() => {\n        sendStudyContents();\n    }, []);\n\n    return (\n        <>\n            <div class=\"list\">\n                <div class=\"listForm\">\n                    <div class=\"currMenu\">\n                        MY CLASSES\n                    </div>\n                    <div class=\"listClassName\">\n                        한국어센터 \b1급 2반\n                    </div>\n                    <div class=\"teacherForm\">\n                        <div class=\"teacherPhoto\">\n                            <img class=\"teacherJPG\" width=\"auto\" width=\"150px\" src=\"./img/teacher.png\" alt=\"teacher\" />\n                        </div>\n                        <div class=\"teacherInfo\">\n                            <span class=\"teacherTag\">NAME</span><br />\n                            <span class=\"teacherContent\">정다빈</span><br />\n                            <span class=\"teacherTag\">E-MAIL</span><br />\n                            <span class=\"teacherContent\">malgolil41@gmail.com</span><br />\n                            <span class=\"teacherTag2\">\n                                ✉️ Send Message\n                            </span>\n                        </div></div>\n                    <h2>NOTICE & HOMEWORK</h2>\n                    <div class=\"nnhForm\">\n                        <ul class=\"nnhForm__notice\">\n                            <li class=\"nnhForm__notice--content\">\n                                <div class=\"nnhForm__notice--content-titlebox\">\n                                    <span class=\"nnhForm__notice--content-title\">다음주 월요일부터 수요일까지는 쉽니다.</span>\n                                    <span class=\"nnhForm__notice--content-date\">2021.09.21</span>\n                                </div>\n                                <span class=\"nnhForm__notice--content-text\">지난 주도 고생 많았습니다.다음주에는 추석이 있기 때문에 수업을 쉽니다.혹시 수업에 들어오지 않도록 주의 바랍니다.</span>\n                            </li>\n                            <li class=\"nnhForm__notice--content\">\n                                <div class=\"nnhForm__notice--content-titlebox\">\n                                    <span class=\"nnhForm__notice--content-title\">다음주 월요일부터 수요일까지는 쉽니다.</span>\n                                    <span class=\"nnhForm__notice--content-date\">2021.09.21</span>\n                                </div>\n                                <span class=\"nnhForm__notice--content-text\">지난 주도 고생 많았습니다.다음주에는 추석이 있기 때문에 수업을 쉽니다.혹시 수업에 들어오지 않도록 주의 바랍니다.</span>\n                            </li>\n                            <li class=\"nnhForm__notice--content\">\n                                <div class=\"nnhForm__notice--content-titlebox\">\n                                    <span class=\"nnhForm__notice--content-title\">다음주 월요일부터 수요일까지는 쉽니다.</span>\n                                    <span class=\"nnhForm__notice--content-date\">2021.09.21</span>\n                                </div>\n                                <span class=\"nnhForm__notice--content-text\">지난 주도 고생 많았습니다.다음주에는 추석이 있기 때문에 수업을 쉽니다.혹시 수업에 들어오지 않도록 주의 바랍니다.</span>\n                            </li>\n                        </ul>\n                        <ul class=\"nnhForm__homework\">\n                            <li class=\"nnhForm__homework--box\">\n                                <span class=\"nnhForm__homework--box-title\">말하기 숙제</span>\n                                <span class=\"nnhForm__homework--box-date\">2021.09.21</span>\n                            </li>\n                            <li class=\"nnhForm__homework--box2\">\n                                <span class=\"nnhForm__homework--box-title\">말하기 숙제</span>\n                                <span class=\"nnhForm__homework--box-date\">2021.09.21</span>\n                            </li>\n                        </ul>\n                    </div>\n                    <h2>CALENDER</h2>\n                    <div class=\"calender\">\n                        달력\n                    </div>\n                </div>\n            </div>\n            <article>\n                <div class=\"articleForm\">\n                    <div class=\"noti_search\">\n                        <div class=\"noti_search_n\">\n                            <span class=\"icon2\">\n                                <img width=\"20px\" src='./img/notification.png' alt=\"notification\" />\n                            </span>\n                        </div>\n                        <div class=\"noti_search_s\">\n                            <span class=\"icon2\">\n                                <img width=\"20px\" src='./img/search.png' alt=\"search\" />\n                            </span>\n                            <span class=\"search\">\n                                <input placeholder=\"Search for anything\" />\n                            </span>\n                        </div>\n                    </div>\n                    <h2>LAST CLASS</h2>\n                    <div class=\"lastClass\">\n                        <div class=\"lastClass_icon\">\n                            <img height=\"100px\" src='./img/class.png' alt=\"next class\" />\n                        </div>\n                        <div class=\"lastClass_content\">\n                            <span class=\"class_title\">지난 수업</span>\n                            <div class=\"class_contents\">{studyContents.map((data, i) => i === 0 ? data.title : '')}</div>\n                        </div>\n                    </div>\n                    <h2>NEXT CLASS</h2>\n                    <div class=\"nextClass\">\n                        <div class=\"nextClass_content\">\n                            <span class=\"class_title\">다음 수업</span>\n                            <span class=\"class_contents\">{studyContents.map((data, i) => i === 0 ? data.next : '')}</span>\n                        </div>\n                        <div class=\"nextClass_icon\">\n                            <img height=\"100px\" src='./img/nextclass.png' alt=\"next class\" />\n                        </div>\n                    </div>\n                </div>\n            </article>\n        </>\n    );\n};\n\nexport default Home;","import React, { useState } from \"react\";\nimport 'css/login.css';\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup, GithubAuthProvider } from \"firebase/auth\";\n\n\nconst Login = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const { target: { name, value } } = event;\n        if (name === \"email\") {\n            setEmail(value)\n        } else if (name === \"password\") {\n            setPassword(value)\n        }\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            const auth = getAuth();\n            let data;\n            if (newAccount) {\n                //Create Account\n                data = await createUserWithEmailAndPassword(auth, email, password);\n            } else {\n                //Login\n                data = await signInWithEmailAndPassword(auth, email, password);\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n\n        }\n    }\n\n    const toggleAccount = () => setNewAccount((prev) => !prev)\n    const onSocialClick = (event) => {\n        const { target: { name } } = event;\n        const auth = getAuth();\n        if (name === \"google\") {\n            const provider = new GoogleAuthProvider();\n            signInWithPopup(auth, provider)\n        } else if (name === \"github\") {\n            const provider = new GithubAuthProvider();\n            signInWithPopup(auth, provider)\n        }\n    }\n\n    return (\n        <>\n            <form class=\"login\" onSubmit={onSubmit}>\n                <div class=\"logoForm\">\n                    <span class=\"logo\">\n                        <span class=\"logoWork\">Class</span>\n                        <span >\n                            Work\n                        </span>\n                    </span>\n                    <div class=\"className\">\n                        한국어센터 1급 2반\n                    </div>\n                </div>\n                <div class=\"idForm\">\n                    <input\n                        name=\"email\"\n                        type=\"email\"\n                        class=\"id\"\n                        placeholder=\"Email\"\n                        value={email}\n                        onChange={onChange} />\n                </div>\n                <div class=\"pwForm\">\n                    <input\n                        name=\"password\"\n                        type=\"password\"\n                        class=\"pw\"\n                        required=\"required\"\n                        value={password}\n                        onChange={onChange}\n                        placeholder=\"Password\" />\n                </div>\n                <div class=\"loginButton\">\n                    <input\n                        type=\"submit\"\n                        value={newAccount ? \"Create Account\" : \"LOGIN\"}\n                        class=\"btn\" />\n                </div>\n                <span class=\"joinAccount\" onClick={toggleAccount}>{newAccount ? \"LOGIN 화면으로 이동\" : \"SIGN UP 화면으로 이동\"}</span>\n                <div class=\"google\">\n                    <button name=\"google\" class=\"googleBTN\" onClick={onSocialClick}>Continue With Google</button>\n                </div>\n            </form>\n        </>\n    );\n\n}\n\nexport default Login;","import React, { useEffect, useState } from \"react\";\nimport { dbService } from 'fbase';\nimport { collection, addDoc, doc, getDocs, getDoc, orderBy, serverTimestamp } from \"firebase/firestore\";\n\nconst Homework = () => {\n    //useState\n    const [submit, setSubmit] = useState(\"\");\n    const [submits, setSubmits] = useState([]);\n    const [HWContents, setHWContents] = useState({\n        content: \"숙제를 선택하면 내용이 나옵니다. \",\n        date: null,\n        title: \"숙제를 선택해 주세요.\",\n        type: \"\",\n    });\n\n    //숙제 리스트 받아오기\n    const homeworkDB = collection(dbService, \"homework\")\n    const getSubmits = async () => {\n        const dbSubmits = await getDocs(homeworkDB, orderBy(\"deadline\"));\n        dbSubmits.forEach((document) => {\n            const submitObject = {\n                ...document.data(),\n                id: document.id,\n            };\n            setSubmits((prev) => [submitObject, ...prev].sort(function (a, b) { return b.deadline - a.deadline }));\n        });\n    };\n\n    //본문 내용 읽어오기 (onClick Event)\n    const sendHWContents = async (key) => {\n        try {\n            const HWref = doc(dbService, \"homework\", `${key}`);\n            const getHWContents = await getDoc(HWref);\n            console.log(getHWContents.data());  //\b 클릭한 부분의 값을 잘 가져오고 있음.\n            setHWContents(getHWContents.data());\n        } catch (e) {\n            console.error(\"Error onClick: \", e);\n        }\n    };\n\n    //db값 얻어오기 useEffect\n    useEffect(() => {\n        getSubmits();\n    }, []);\n\n    //\bCreate DB\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const docRef = await addDoc(collection(dbService, \"homework\"), {\n                content: submit,\n                date: serverTimestamp(),\n                type: `type`,\n                title: submit,\n                deadline: serverTimestamp()\n\n            });\n            console.log(\"Document written with ID: \", docRef.id);\n        } catch (e) {\n            console.error(\"Error adding document: \", e);\n        }\n        setSubmit(\"\");\n    }\n\n    const onChange = (event) => {\n        const { target: { value }, } = event;\n        setSubmit(value);\n    };\n\n    // 타임스템프 변환\n    const stampToDate = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getMonth() + 1}/${date.getDate()}`;\n        }\n        return;\n    };\n\n    // 타임스템프 to date (yy.mm.dd)\n    const stampToDate_yymmdd = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n        }\n        return;\n    };\n\n    //숙제 마감 여부 계산\n    const chkDeadline = (deadline) => {\n        const today = new Date();\n        if (deadline.toDate() < today) {\n            return `🔚 마감 되었습니다.`\n        } else {\n            return `✔ 숙제를 내세요.`\n        }\n    }\n\n    // 본 내용\n    return (\n        <>\n            {/* 중앙 레이아웃 */}\n            <div class=\"list\">\n                <div class=\"listForm\">\n                    <div class=\"currMenu\">\n                        HOMEWORK\n                    </div>\n                    {/* 글쓰기(임시) */}\n                    <form onSubmit={onSubmit}>\n                        <input value={submit} onChange={onChange} type=\"text\" placeholder=\"testInput\" maxLength={120} />\n                        <input type=\"submit\" value=\"Submit\" />\n                    </form>\n\n                    {/* 숙제 리스트 */}\n                    {submits.map((homework, i) =>\n                        i % 2 === 0 ?\n                            <div class=\"homeworkListForm\" key={homework.id} onClick={() => { sendHWContents(homework.id) }}>\n                                <div class=\"homeworkListForm_l\">\n                                    <div class=\"homeworkListDate\">\n                                        ~{stampToDate(homework.deadline)}\n                                    </div>\n                                </div>\n                                <div class=\"homeworkListForm_r\">\n                                    <div class=\"homeworkListTag\">\n                                        waiting\n                                    </div>\n                                    <div class=\"homeworkListTitle\">\n                                        {homework.type}\n                                    </div>\n                                    <div class=\"homeworkListTitle\">\n                                        {homework.content}\n                                    </div>\n                                    <div class=\"homeworkListMTag\">\n                                        {chkDeadline(homework.deadline)}\n                                    </div>\n                                </div>\n                            </div>\n                            :\n                            <div class=\"homeworkListForm2\" key={homework.id} onClick={() => { sendHWContents(homework.id) }}>\n                                <div class=\"homeworkListForm_l\">\n                                    <div class=\"homeworkListDate\">\n                                        ~{stampToDate(homework.deadline)}\n                                    </div>\n                                </div>\n                                <div class=\"homeworkListForm_r\">\n                                    <div class=\"homeworkListTag\">\n                                        waiting\n                                    </div>\n                                    <div class=\"homeworkListTitle\">\n                                        {homework.type}\n                                    </div>\n                                    <div class=\"homeworkListTitle\">\n                                        {homework.content}\n                                    </div>\n                                    <div class=\"homeworkListMTag\">\n                                        {chkDeadline(homework.deadline)}\n                                    </div>\n                                </div>\n                            </div>\n                    )}\n\n                </div>\n            </div>\n\n            {/* 우측 레이아웃 */}\n            <article>\n                <div class=\"articleForm\">\n                    <div class=\"noti_search\">\n                        <div class=\"noti_search_n\">\n                            <span class=\"icon2\">\n                                <img width=\"20px\" src='./img/notification.png' alt=\"notification\" />\n                            </span>\n                        </div>\n                        <div class=\"noti_search_s\">\n                            <span class=\"icon2\">\n                                <img width=\"20px\" src='./img/search.png' alt=\"search\" />\n                            </span>\n                            <span class=\"search\">\n                                <input placeholder=\"Search for anything\" />\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"homeworkTitleDate\">\n                        <div class=\"homeworkContentTitle\">\n                            {HWContents.type} {HWContents.title}\n                        </div>\n                        <div class=\"homeworkDate\">\n                            {stampToDate_yymmdd(HWContents.date)}\n                        </div>\n                    </div>\n                    <div class=\"homeworkContents\">\n                        {HWContents.content}\n                    </div>\n                    <div class=\"homeworkSubmit\">\n                        <div class=\"homeworkSubmitL\">\n                            <img width=\"50px\" src=\"./img/send.png\" alt=\"send\" />\n                        </div>\n                        <div class=\"homeworkSubmitR\">\n                            숙제 제출\n                        </div>\n                    </div>\n                </div>\n            </article>\n        </>\n    );\n\n};\n\nexport default Homework;","import React, { useEffect, useState } from \"react\";\nimport { dbService } from 'fbase';\nimport { collection, doc, getDocs, getDoc } from \"firebase/firestore\";\n\nconst Study = () => {\n    //useState\n    const [submits, setSubmits] = useState([]);\n    const [studyContents, setStudyContents] = useState({\n        chapter: \"1과\",\n        content: \"내용입니다.\",\n        date: null,\n        title: \"보고 싶은 내용을 선택하세요.\",\n        type: \"\",\n        page: \"page\",\n    });\n\n    //숙제 리스트 받아오기\n    const homeworkDB = collection(dbService, \"study\")\n    const getSubmits = async () => {\n        const dbSubmits = await getDocs(homeworkDB);\n        dbSubmits.forEach((document) => {\n            const submitObject = {\n                ...document.data(),\n                id: document.id,\n            };\n            setSubmits((prev) => [submitObject, ...prev]);\n        });\n    };\n\n    //본문 내용 읽어오기 (onClick Event)\n    const sendStudyContents = async (key) => {\n        try {\n            const studyRef = doc(dbService, \"study\", `${key}`);\n            const getStudyContents = await getDoc(studyRef);\n            setStudyContents(getStudyContents.data());\n        } catch (e) {\n            console.error(\"Error onClick: \", e);\n        }\n    };\n\n    //db값 얻어오기 useEffect\n    useEffect(() => {\n        getSubmits();\n    }, []);\n\n    // 타임스템프 변환\n    const stampToDate = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getMonth() + 1}/${date.getDate()}`;\n        }\n        return;\n    };\n\n    // 타임스템프 to date (yy.mm.dd)\n    const stampToDate_yymmdd = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n        }\n        return;\n    };\n\n\n    return (\n        <>\n            <div class=\"list\">\n                <div class=\"listForm\">\n                    <div class=\"currMenu\">\n                        STUDY\n                    </div>\n                    {submits.map((study, i) =>\n                        i % 2 === 0 ?\n                            <div class=\"homeworkListForm\" onClick={() => { sendStudyContents(study.id) }}>\n                                <div class=\"homeworkListForm_l\">\n                                    <div class=\"homeworkListDate\">\n                                        {stampToDate(study.date)}\n                                    </div>\n                                </div>\n                                <div class=\"homeworkListForm_r\">\n                                    <div class=\"homeworkListTag\">\n                                        {study.chapter}\n                                    </div>\n                                    <div class=\"homeworkListTitle\">\n                                        {study.type}\n                                    </div>\n                                    <div class=\"homeworkListTitle\">\n                                        {study.type}\n                                    </div>\n                                    <div class=\"homeworkListMTag\">\n                                        📚 {study.page}\n                                    </div>\n                                </div>\n                            </div>\n                            :\n                            <div class=\"homeworkListForm2\" onClick={() => { sendStudyContents(study.id) }}>\n                                <div class=\"homeworkListForm_l\">\n                                    <div class=\"homeworkListDate\">\n                                        {stampToDate(study.date)}\n                                    </div>\n                                </div>\n                                <div class=\"homeworkListForm_r\">\n                                    <div class=\"homeworkListTag\">\n                                        {study.chapter}\n                                    </div>\n                                    <div class=\"homeworkListTitle\">\n                                        {study.type}\n                                    </div>\n                                    <div class=\"homeworkListTitle\">\n                                        {study.type}\n                                    </div>\n                                    <div class=\"homeworkListMTag\">\n                                        📚 {study.page}\n                                    </div>\n                                </div>\n                            </div>\n                    )}\n\n                </div>\n            </div>\n            <article>\n                <div class=\"articleForm\">\n                    <div class=\"noti_search\">\n                        <div class=\"noti_search_n\">\n                            <span class=\"icon2\">\n                                <img width=\"20px\" src='./img/notification.png' alt=\"notification\" />\n                            </span>\n                        </div>\n                        <div class=\"noti_search_s\">\n                            <span class=\"icon2\">\n                                <img width=\"20px\" src='./img/search.png' alt=\"search\" />\n                            </span>\n                            <span class=\"search\">\n                                <input placeholder=\"Search for anything\" />\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"homeworkTitleDate\">\n                        <div class=\"homeworkContentTitle\">\n                            {studyContents.title}\n                        </div>\n                        <div class=\"homeworkDate\">\n                            {stampToDate_yymmdd(studyContents.date)}\n                        </div>\n                    </div>\n                    <div class=\"homeworkContents\">\n                        {studyContents.content}\n                        <div class=\"homeworkListMTag\">\n                            📚 {studyContents.page}\n                        </div>\n                    </div>\n\n                </div>\n            </article>\n        </>\n    );\n\n};\n\nexport default Study;","import React, { useEffect, useState } from \"react\";\nimport { dbService } from 'fbase';\nimport { collection, doc, getDocs, getDoc } from \"firebase/firestore\";\n\nconst Question = () => {\n\n    //useState\n    const [submits, setSubmits] = useState([]);\n    const [questionContents, setQuestionContents] = useState({\n        content: \"내용입니다.\",\n        date: null,\n        title: \"보고 싶은 내용을 선택하세요.\",\n        secret: false,\n        page: \"page\",\n        writer: \"작성자\",\n    });\n    const [questionReplys, setQuestionReplys] = useState([]);\n\n\n    //숙제 리스트 받아오기\n    const questionDB = collection(dbService, \"question\")\n    const getSubmits = async () => {\n        const dbSubmits = await getDocs(questionDB);\n        dbSubmits.forEach((document) => {\n            const submitObject = {\n                ...document.data(),\n                id: document.id,\n            };\n            setSubmits((prev) => [submitObject, ...prev]);\n        });\n    };\n\n    //본문 내용 읽어오기 (onClick Event)\n    const sendQuestionContents = async (key) => {\n        try {\n            const questionRef = doc(dbService, \"question\", `${key}`);\n            const getQuestionContents = await getDoc(questionRef);\n            setQuestionContents(getQuestionContents.data());\n        } catch (e) {\n            console.error(\"Error onClick: \", e);\n        }\n    };\n\n    // 댓글 읽어오기(본문 내용 읽어오기에 이어서...)\n    // const questionReplyDB = collection(dbService, \"question/reply\")\n    // const getQuestionReplys = async () => {\n    //     const dbQuestionReplys = await getDocs(questionReplyDB);\n    //     dbQuestionReplys.forEach((document) => {\n    //         const questionReplyObject = {\n    //             ...document.data(),\n    //             id: document.id,\n    //         };\n    //         setQuestionReplys((prev) => [questionReplyObject, ...prev]);\n    //     });\n    // };\n\n    //db값 얻어오기 useEffect\n    useEffect(() => {\n        getSubmits();\n        // getQuestionReplys();\n    }, []);\n\n    // 타임스템프 변환\n    const stampToDate = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getMonth() + 1}/${date.getDate()}`;\n        }\n        return;\n    };\n\n    // 타임스템프 to date (yy.mm.dd)\n    const stampToDate_yymmdd = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n        }\n        return;\n    };\n\n    return (\n        <>\n            <div class=\"list\">\n                <div class=\"listForm\">\n                    <div class=\"currMenu\">\n                        QUESTION\n                    </div>\n                    <board>\n                        {submits.map(question =>\n                            <div class=\"boardForm\" onClick={() => { sendQuestionContents(question.id) }}>\n                                <div class=\"boardListNumber\">{question.number}</div>\n                                <div class=\"boardListTitle\">{question.title}</div>\n                                <div class=\"boardListDate\">\n                                    {stampToDate_yymmdd(question.date)}\n                                    <span class=\"boardListWriter\">{question.writer}</span>\n                                </div>\n                            </div>\n                        )}\n                    </board>\n                </div>\n            </div>\n            <article>\n                <div class=\"articleForm\">\n                    <div class=\"noti_search\">\n                        <div class=\"noti_search_n\">\n                            <span class=\"icon2\">\n                                <img width=\"20px\" src='./img/notification.png' alt=\"notification\" />\n                            </span>\n                        </div>\n                        <div class=\"noti_search_s\">\n                            <span class=\"icon2\">\n                                <img width=\"20px\" src='./img/search.png' alt=\"search\" />\n                            </span>\n                            <span class=\"search\">\n                                <input placeholder=\"Search for anything\" />\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"homeworkTitleDate\">\n                        <div class=\"homeworkContentTitle\">\n                            {questionContents.title}\n                        </div>\n                        <div class=\"homeworkDate\">\n                            {stampToDate_yymmdd(questionContents.date)}\n                        </div>\n                    </div>\n                    <div class=\"homeworkContents\">\n                        {questionContents.content}\n                        <div class=\"name\">\n                            {questionContents.writer}\n                        </div>\n                    </div>\n                    <div class=\"replyForm\">\n                        <div class=\"replyFormL\">\n                            <img width=\"50px\" src=\"./img/reply-message.png\" alt=\"reply\" class=\"replyImgStyle\" />\n                        </div>\n                        <div class=\"replyFormR\">\n                            의미가 조금 달라요.\n                            <div class=\"name\">\n                                선생님\n                            </div>\n                        </div>\n\n                    </div>\n\n                </div>\n            </article>\n        </>\n    );\n\n};\n\nexport default Question;","import React, { useEffect, useState } from \"react\";\nimport { dbService } from 'fbase';\nimport { collection, doc, getDocs, getDoc } from \"firebase/firestore\";\n\nconst Notice = () => {\n\n    //useState\n    const [submits, setSubmits] = useState([]);\n    const [noticeContents, setNoticeContents] = useState({\n        content: \"내용입니다.\",\n        date: null,\n        title: \"보고 싶은 내용을 선택하세요.\",\n        secret: false,\n        page: \"page\",\n        writer: \"작성자\",\n    });\n\n\n    //숙제 리스트 받아오기\n    const noticeDB = collection(dbService, \"notice\")\n    const getSubmits = async () => {\n        const dbSubmits = await getDocs(noticeDB);\n        dbSubmits.forEach((document) => {\n            const submitObject = {\n                ...document.data(),\n                id: document.id,\n            };\n            setSubmits((prev) => [submitObject, ...prev]);\n        });\n    };\n\n    //본문 내용 읽어오기 (onClick Event)\n    const sendNoticeContents = async (key) => {\n        try {\n            const noticeRef = doc(dbService, \"notice\", `${key}`);\n            const getNoticeContents = await getDoc(noticeRef);\n            setNoticeContents(getNoticeContents.data());\n        } catch (e) {\n            console.error(\"Error onClick: \", e);\n        }\n    };\n\n    //db값 얻어오기 useEffect\n    useEffect(() => {\n        getSubmits();\n    }, []);\n\n    // 타임스템프 변환\n    const stampToDate = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getMonth() + 1}/${date.getDate()}`;\n        }\n        return;\n    };\n\n    // 타임스템프 to date (yy.mm.dd)\n    const stampToDate_yymmdd = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n        }\n        return;\n    };\n\n    return (\n        <>\n            <div class=\"list\">\n                <div class=\"listForm\">\n                    <div class=\"currMenu\">\n                        NOTICE\n                    </div>\n                    <board>\n                        {submits.map(notice =>\n                            <div class=\"boardForm\" onClick={() => { sendNoticeContents(notice.id) }}>\n                                <div class=\"boardListNumber\">{notice.number}</div>\n                                <div class=\"boardListTitle\">{notice.title}</div>\n                                <div class=\"boardListDate\">{stampToDate_yymmdd(notice.date)}</div>\n                            </div>\n                        )}\n                    </board>\n                </div>\n            </div>\n            <article>\n                <div class=\"articleForm\">\n                    <div class=\"notiBar\">\n                        <div class=\"noti_search\">\n                            <div class=\"noti_search_n\">\n                                <span class=\"icon2\">\n                                    <img width=\"20px\" src='./img/notification.png' alt=\"notification\" />\n                                </span>\n                            </div>\n                            <div class=\"noti_search_s\">\n                                <span class=\"icon2\">\n                                    <img width=\"20px\" src='./img/search.png' alt=\"search\" />\n                                </span>\n                                <span class=\"search\">\n                                    <input placeholder=\"Search for anything\" />\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"homeworkTitleDate\">\n                        <div class=\"homeworkContentTitle\">\n                            {noticeContents.title}\n                        </div>\n                        <div class=\"homeworkDate\">\n                            {stampToDate_yymmdd(noticeContents.date)}\n                        </div>\n                    </div>\n                    <div class=\"homeworkContents\">\n                        {noticeContents.content}\n                    </div>\n                    <div class=\"replyForm\">\n                        <div class=\"replyFormL\">\n                            <img width=\"50px\" src=\"./img/reply-message.png\" alt=\"reply\" class=\"replyImgStyle\" />\n                        </div>\n                        <div class=\"replyFormR\">\n                            알겠습니다!!\n                            <div class=\"name\">\n                                \b린짱\n                            </div>\n                        </div>\n\n                    </div>\n\n                </div>\n            </article>\n        </>\n    );\n\n};\n\nexport default Notice;","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from 'react-router';\nimport { authService } from 'fbase';\n\nconst Layout = () => {\n\n    // 로딩되면 첫 번째 메뉴\n    const firstMenu = () => {\n        document.querySelector(\"#MYCLASSES\").style.color = \"#3f3e3e\";\n    };\n    useEffect(firstMenu, []);\n\n    // 로그아웃 function\n    const history = useHistory();\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n\n    // 메뉴 onClick 이벤트\n    const [navCurrMenu, setNavCurrMenu] = useState(`MY CLASSES`)\n\n    const moveRoute = (menu) => {\n        const menuColorReset = () => {\n            document.querySelector(\"#MYCLASSES\").style.color = \"#cac9cd\";\n            document.querySelector(\"#HOMEWORK\").style.color = \"#cac9cd\";\n            document.querySelector(\"#STUDY\").style.color = \"#cac9cd\";\n            document.querySelector(\"#QUESTION\").style.color = \"#cac9cd\";\n            document.querySelector(\"#NOTICE\").style.color = \"#cac9cd\";\n        }\n        menuColorReset();\n        switch (menu) {\n            case `MY CLASSES`:\n                setNavCurrMenu(menu);\n                document.querySelector(\"#MYCLASSES\").style.color = \"#3f3e3e\";\n                history.push(\"/\");\n                break;\n            case `HOMEWORK`:\n                setNavCurrMenu(menu);\n                document.querySelector(\"#HOMEWORK\").style.color = \"#3f3e3e\";\n                history.push(\"/Homework\");\n                break;\n            case `STUDY`:\n                setNavCurrMenu(menu);\n                document.querySelector(\"#STUDY\").style.color = \"#3f3e3e\";\n                history.push(\"/Study\");\n                break;\n            case `QUESTION`:\n                setNavCurrMenu(menu);\n                document.querySelector(\"#QUESTION\").style.color = \"#3f3e3e\";\n                history.push(\"/Question\");\n                break;\n            case `NOTICE`:\n                setNavCurrMenu(menu);\n                document.querySelector(\"#NOTICE\").style.color = \"#3f3e3e\";\n                history.push(\"/Notice\");\n                break;\n            default:\n                break;\n        }\n\n    };\n    return (\n        <>\n            <div id=\"logoLink\" onClick={() => { moveRoute('MY CLASSES') }}>\n                <span class=\"logo\">\n                    <span class=\"logoWork\">Class</span>\n                    Work\n                </span>\n                <div class=\"className\">\n                    한국어센터 1급 2반\n                </div>\n            </div>\n            <div class=\"navBar\">\n                <div class=\"userInfo\">\n                    <span class=\"userInfo_name\">{authService.currentUser.displayName} 님</span><br />\n                    <span class=\"userInfo_info\">{authService.currentUser.email}</span>\n                </div>\n                <div class=\"signOut\" onClick={onLogOutClick}>SIGN OUT</div>\n                <div class=\"menuForm\">\n                    <ul class=\"ulMenu\">\n                        <div class=\"menu\" id=\"MYCLASSES\">\n                            <li onClick={() => { moveRoute('MY CLASSES') }}>MY CLASSES</li>\n                        </div>\n                        <div class=\"menu\" id=\"HOMEWORK\">\n                            <li onClick={() => { moveRoute('HOMEWORK') }}>HOMEWORK</li>\n                        </div>\n                        <div class=\"menu\" id=\"STUDY\">\n                            <li onClick={() => { moveRoute('STUDY') }}>STUDY</li>\n                        </div>\n                        <div class=\"menu\" id=\"QUESTION\">\n                            <li onClick={() => { moveRoute('QUESTION') }}>QUESTION</li>\n                        </div>\n                        <div class=\"menu\" id=\"NOTICE\">\n                            <li onClick={() => { moveRoute('NOTICE') }}>NOTICE</li>\n                        </div>\n                    </ul>\n                </div>\n            </div >\n        </>\n\n\n\n    );\n};\n\nexport default Layout;","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Router, Switch, Route } from \"react-router-dom\";\nimport Home from 'routes/Home';\nimport Login from 'routes/Login';\nimport Homework from 'routes/Homework';\nimport Study from 'routes/Study';\nimport Question from 'routes/Question'\nimport Notice from 'routes/Notice';\nimport Navigation from 'component/Navigation';\n\n\nconst AppRouter = ({ isLoggedIn }) => {\n    // 모바일 \b메뉴 열기, 닫기 스크립트\n    const [navBar, setNavBar] = useState(false);\n    const mobileMenuOpen = () => {\n        if (navBar) {\n            document.querySelector('.navBar').style.display = 'none';\n            setNavBar(false);\n        } else {\n            document.querySelector('.navBar').style.display = 'block';\n            setNavBar(true);\n        }\n    };\n\n    // 브라우저 resize할 때, 메뉴 open, close\n    const handleMobileMenu = () => {\n        if (window.innerWidth <= 800) {\n            document.querySelector('.navBar').style.display = 'none';\n            setNavBar(false);\n        } else {\n            document.querySelector('.navBar').style.display = 'block';\n            setNavBar(true);\n        }\n    };\n\n    useEffect(() => {\n        if (isLoggedIn) {\n            window.addEventListener('resize', handleMobileMenu);\n            return () => {\n                window.removeEventListener('resize', handleMobileMenu);\n            }\n        }\n    }, []);\n\n    return (\n        // <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <BrowserRouter basename=\"/classWork\">\n            <Switch>\n                {\n                    isLoggedIn\n                        ? <>\n                            < div class=\"menuBTN\" onClick={mobileMenuOpen}>\n                                <span class=\"icon\">\n                                    <img width=\"20px\" src='./img/list.png' alt=\"notification\" />\n                                </span>\n                            </div>\n                            <div class=\"box\">\n                                <nav>\n                                    <Navigation />\n                                </nav>\n                                < Route exact path=\"/\" >\n                                    <Home />\n                                </Route>\n                                < Route exact path=\"/Homework\" >\n                                    <Homework />\n                                </Route>\n                                < Route exact path=\"/Study\" >\n                                    <Study />\n                                </Route>\n                                < Route exact path=\"/Question\" >\n                                    <Question />\n                                </Route>\n                                < Route exact path=\"/Notice\" >\n                                    <Notice />\n                                </Route>\n                            </div>\n                            <div class=\"copyright\">\n                                <footer>&copy; Class Work {new Date().getFullYear()}</footer>\n                            </div>\n                        </>\n                        : <Route exact=\"exact\" path=\"/\"><Login /></Route>\n                }\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\nimport 'css/style.css'\nimport 'css/nav.css'\nimport 'css/view.css'\nimport 'css/list.css'\nimport AppRouter from 'component/Router';\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true)\n      } else {\n        setIsLoggedIn(false)\n      }\n      setInit(true);\n    })\n  }, []);\n\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={isLoggedIn} /> : \"Initializing.... \"}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'component/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}