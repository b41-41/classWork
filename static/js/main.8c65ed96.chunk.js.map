{"version":3,"sources":["fbase.js","routes/Home.js","routes/Login.js","routes/Homework/HomeworkList.js","routes/Homework/HomeworkDetail.js","routes/Homework/HomeworkSubmit.js","img/notification.png","img/search.png","component/NotiSearchBar.js","routes/Homework/index.js","routes/Study/index.js","routes/Question/index.js","routes/Notice/index.js","component/Navigation.js","component/Router.js","component/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","authService","getAnalytics","getAuth","dbService","getFirestore","Home","match","useState","studyContents","setStudyContents","noticeContents","setNoticeContents","homeworkContents","setHomeworkContents","sendContents","a","noticeRef","collection","studyRef","homeworkRef","getDocs","forEach","document","noticeObject","data","id","prev","sort","b","date","studyObject","homeworkObject","console","error","useEffect","stampToDate_yymmdd","timestamp","toDate","getFullYear","getMonth","getDate","className","width","map","notice","i","title","content","homework","to","pathname","src","alt","placeholder","height","next","Login","email","setEmail","password","setPassword","newAccount","setNewAccount","setError","onChange","event","target","name","value","onSubmit","preventDefault","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","log","message","class","type","required","onClick","provider","GoogleAuthProvider","signInWithPopup","GithubAuthProvider","HomeworkList","submits","setSubmits","homeworkDB","useHistory","getSubmits","orderBy","submitObject","deadline","stampToDate","chkDeadline","today","Date","HomeworkDetail","HWContents","setHWContents","key","params","sendHWContents","HWref","doc","getDoc","getHWContents","undefined","endDay","endDayDistance","dday","Math","floor","printDday","state","HomeworkSubmit","userObj","submit","setSubmit","HomeworkID","UID","currentUser","uid","text","now","loadCollection","addDoc","docRef","autoFocus","NotiSearchBar","notification","search","Homework","exact","path","render","Study","chapter","page","sendStudyContents","getStudyContents","study","Question","secret","writer","questionContents","setQuestionContents","questionDB","sendQuestionContents","questionRef","getQuestionContents","question","number","Notice","noticeDB","sendNoticeContents","getNoticeContents","Layout","querySelector","navCurrMenu","style","color","history","setNavCurrMenu","moveRoute","menu","push","displayName","signOut","AppRouter","isLoggedIn","navBar","setNavBar","handleMobileMenu","window","innerWidth","display","addEventListener","removeEventListener","basename","Navigation","component","Route","App","init","setInit","setIsLoggedIn","onAuthStateChanged","user","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8c65ed96.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst firebaseApp = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nexport const authService = getAuth();\nexport const dbService = getFirestore();","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { dbService } from 'fbase';\nimport { collection, getDocs } from \"firebase/firestore\";\n\nconst Home = ({ match }) => {\n    const [studyContents, setStudyContents] = useState([]);\n    const [noticeContents, setNoticeContents] = useState([]);\n    const [homeworkContents, setHomeworkContents] = useState([]);\n\n    //최근 수업 정보 받아오기 \n    const sendContents = async () => {\n        try {\n            const noticeRef = collection(dbService, \"notice\");\n            const studyRef = collection(dbService, \"study\");\n            const homeworkRef = collection(dbService, \"homework\");\n\n            const getNoticeContents = await getDocs(noticeRef);\n            getNoticeContents.forEach((document) => {\n                const noticeObject = {\n                    ...document.data(),\n                    id: document.id,\n                };\n                setNoticeContents((prev) => [noticeObject, ...prev].sort(function (a, b) { return b.date - a.date }));\n            });\n\n            const getStudyContents = await getDocs(studyRef);\n            getStudyContents.forEach((document) => {\n                const studyObject = {\n                    ...document.data(),\n                    id: document.id,\n                };\n                setStudyContents((prev) => [studyObject, ...prev].sort(function (a, b) { return b.date - a.date }));\n            });\n\n            const getHomeworkContents = await getDocs(homeworkRef);\n            getHomeworkContents.forEach((document) => {\n                const homeworkObject = {\n                    ...document.data(),\n                    id: document.id,\n                };\n                setHomeworkContents((prev) => [homeworkObject, ...prev].sort(function (a, b) { return b.date - a.date }));\n            });\n\n        } catch (e) {\n            console.error(\"Error onClick: \", e);\n        }\n    };\n\n    useEffect(() => {\n        sendContents();\n    }, []);\n\n    // 타임스템프 to date (yy.mm.dd)\n    const stampToDate_yymmdd = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n        }\n        return;\n    };\n\n    return (\n        <>\n            <div className=\"list\">\n                <div className=\"listForm\">\n                    <div className=\"currMenu\">\n                        MY CLASSES\n                    </div>\n                    <div className=\"listClassName\">\n                        한국어센터 \b1급 2반\n                    </div>\n                    <div className=\"teacherForm\">\n                        <div className=\"teacherPhoto\">\n                            <img className=\"teacherJPG\" width=\"auto\" width=\"150px\" src=\"./img/teacher.png\" alt=\"teacher\" />\n                        </div>\n                        <div className=\"teacherInfo\">\n                            <span className=\"teacherTag\">NAME</span><br />\n                            <span className=\"teacherContent\">정다빈</span><br />\n                            <span className=\"teacherTag\">E-MAIL</span><br />\n                            <span className=\"teacherContent\">malgolil41@gmail.com</span><br />\n                            <span className=\"teacherTag2\">\n                                ✉️ Send Message\n                            </span>\n                        </div></div>\n                    <h2>NOTICE & HOMEWORK</h2>\n                    <div className=\"nnhForm\">\n                        <ul className=\"nnhForm__notice\">\n                            {noticeContents.map((notice, i) =>\n                                i < 3 ?\n                                    <li className=\"nnhForm__notice--content\">\n                                        <div className=\"nnhForm__notice--content-titlebox\">\n                                            <span className=\"nnhForm__notice--content-title\">{notice.title}</span>\n                                            <span className=\"nnhForm__notice--content-date\">{stampToDate_yymmdd(notice.date)}</span>\n                                        </div>\n                                        <span className=\"nnhForm__notice--content-text\">{notice.content}</span>\n                                    </li>\n                                    : ''\n                            )}\n                        </ul>\n                        <ul className=\"nnhForm__homework\">\n                            {homeworkContents.map((homework, i) =>\n                                i < 2 ?\n                                    (i + 1) % 2 !== 0 ?\n                                        <Link to={{ pathname: `/Homework/${homework.id}` }}>\n                                            <li className=\"nnhForm__homework--box\">\n                                                <span className=\"nnhForm__homework--box-title\">{homework.title}</span>\n                                                <span className=\"nnhForm__homework--box-date\">{stampToDate_yymmdd(homework.date)}</span>\n                                            </li>\n                                        </Link>\n                                        :\n                                        <Link to={{ pathname: `/Homework/${homework.id}` }}>\n                                            <li className=\"nnhForm__homework--box2\">\n                                                <span className=\"nnhForm__homework--box-title\">{homework.title}</span>\n                                                <span className=\"nnhForm__homework--box-date\">{stampToDate_yymmdd(homework.date)}</span>\n                                            </li>\n                                        </Link>\n                                    : ''\n                            )}\n\n\n                        </ul>\n                    </div>\n                    <h2>CALENDER</h2>\n                    <div className=\"calender\">\n                        달력\n                    </div>\n                </div>\n            </div>\n            <article>\n                <div className=\"articleForm\">\n                    <div className=\"noti_search\">\n                        <div className=\"noti_search_n\">\n                            <span className=\"icon2\">\n                                <img width=\"20px\" src='./img/notification.png' alt=\"notification\" />\n                            </span>\n                        </div>\n                        <div className=\"noti_search_s\">\n                            <span className=\"icon2\">\n                                <img width=\"20px\" src='./img/search.png' alt=\"search\" />\n                            </span>\n                            <span className=\"search\">\n                                <input placeholder=\"Search for anything\" />\n                            </span>\n                        </div>\n                    </div>\n                    <h2>LAST CLASS</h2>\n                    <div className=\"lastClass\">\n                        <div className=\"lastClass_icon\">\n                            <img height=\"100px\" src='./img/class.png' alt=\"next class\" />\n                        </div>\n                        <div className=\"lastClass_content\">\n                            <span className=\"class_title\">지난 수업</span>\n                            <div className=\"class_contents\">{studyContents.map((data, i) => i === 0 ? data.title : '')}</div>\n                        </div>\n                    </div>\n                    <h2>NEXT CLASS</h2>\n                    <div className=\"nextClass\">\n                        <div className=\"nextClass_content\">\n                            <span className=\"class_title\">다음 수업</span>\n                            <span className=\"class_contents\">{studyContents.map((data, i) => i === 0 ? data.next : '')}</span>\n                        </div>\n                        <div className=\"nextClass_icon\">\n                            <img height=\"100px\" src='./img/nextclass.png' alt=\"next class\" />\n                        </div>\n                    </div>\n                </div>\n            </article>\n        </>\n    );\n};\n\nexport default Home;","import React, { useState } from \"react\";\nimport 'css/login.css';\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup, GithubAuthProvider } from \"firebase/auth\";\n\n\nconst Login = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const { target: { name, value } } = event;\n        if (name === \"email\") {\n            setEmail(value)\n        } else if (name === \"password\") {\n            setPassword(value)\n        }\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            const auth = getAuth();\n            let data;\n            if (newAccount) {\n                //Create Account\n                data = await createUserWithEmailAndPassword(auth, email, password);\n            } else {\n                //Login\n                data = await signInWithEmailAndPassword(auth, email, password);\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n\n        }\n    }\n\n    const toggleAccount = () => setNewAccount((prev) => !prev)\n    const onSocialClick = (event) => {\n        const { target: { name } } = event;\n        const auth = getAuth();\n        if (name === \"google\") {\n            const provider = new GoogleAuthProvider();\n            signInWithPopup(auth, provider)\n        } else if (name === \"github\") {\n            const provider = new GithubAuthProvider();\n            signInWithPopup(auth, provider)\n        }\n    }\n\n    return (\n        <>\n            <form class=\"login\" onSubmit={onSubmit}>\n                <div class=\"logoForm\">\n                    <span class=\"logo\">\n                        <span class=\"logoWork\">Class</span>\n                        <span >\n                            Work\n                        </span>\n                    </span>\n                    <div class=\"className\">\n                        한국어센터 1급 2반\n                    </div>\n                </div>\n                <div class=\"idForm\">\n                    <input\n                        name=\"email\"\n                        type=\"email\"\n                        class=\"id\"\n                        placeholder=\"Email\"\n                        value={email}\n                        onChange={onChange} />\n                </div>\n                <div class=\"pwForm\">\n                    <input\n                        name=\"password\"\n                        type=\"password\"\n                        class=\"pw\"\n                        required=\"required\"\n                        value={password}\n                        onChange={onChange}\n                        placeholder=\"Password\" />\n                </div>\n                <div class=\"loginButton\">\n                    <input\n                        type=\"submit\"\n                        value={newAccount ? \"Create Account\" : \"LOGIN\"}\n                        class=\"btn\" />\n                </div>\n                <span class=\"joinAccount\" onClick={toggleAccount}>{newAccount ? \"LOGIN 화면으로 이동\" : \"SIGN UP 화면으로 이동\"}</span>\n                <div class=\"google\">\n                    <button name=\"google\" class=\"googleBTN\" onClick={onSocialClick}>Continue With Google</button>\n                </div>\n            </form>\n        </>\n    );\n\n}\n\nexport default Login;","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { dbService } from 'fbase';\nimport { collection, addDoc, doc, getDocs, getDoc, orderBy, serverTimestamp } from \"firebase/firestore\"\n\nconst HomeworkList = () => {\n    const [submits, setSubmits] = useState([]);\n    const history = useHistory();\n\n    //숙제 리스트 받아오기\n    const homeworkDB = collection(dbService, \"homework\")\n    const getSubmits = async () => {\n        const dbSubmits = await getDocs(homeworkDB, orderBy(\"deadline\"));\n        dbSubmits.forEach((document) => {\n            const submitObject = {\n                ...document.data(),\n                id: document.id,\n            };\n            setSubmits((prev) => [submitObject, ...prev].sort(function (a, b) { return b.deadline - a.deadline }));\n        });\n    };\n\n    //db값 얻어오기 useEffect\n    useEffect(() => {\n        getSubmits();\n    }, [])\n\n    // 타임스템프 변환\n    const stampToDate = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getMonth() + 1}/${date.getDate()}`;\n        }\n        return;\n    };\n\n    // 타임스템프 to date (yy.mm.dd)\n    const stampToDate_yymmdd = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n        }\n        return;\n    };\n\n    //숙제 마감 여부 계산\n    const chkDeadline = (deadline) => {\n        const today = new Date();\n        if (deadline.toDate() < today) {\n            return `🔚 마감 되었습니다.`\n        } else {\n            return `✔ 숙제를 내세요.`\n        }\n    }\n\n    return (\n        <>\n            {/* 숙제 리스트 */}\n            {submits.map((homework, i) =>\n                i % 2 === 0 ?\n                    <Link to={`/Homework/${homework.id}`} >\n                        <div className=\"homeworkListForm\" key={homework.id}>\n                            <div className=\"homeworkListForm_l\">\n                                <div className=\"homeworkListDate\">\n                                    ~{stampToDate(homework.deadline)}\n                                </div>\n                            </div>\n                            <div className=\"homeworkListForm_r\">\n                                <div className=\"homeworkListTag\">\n                                    {homework.type}\n                                </div>\n                                <div className=\"homeworkListTitle\">\n                                    {homework.title}\n                                </div>\n                                <div className=\"homeworkListMTag\">\n                                    {chkDeadline(homework.deadline)}\n                                </div>\n                            </div>\n                        </div>\n                    </Link>\n                    :\n                    <Link to={`/Homework/${homework.id}`} >\n                        <div className=\"homeworkListForm2\" key={homework.id}>\n                            <div className=\"homeworkListForm_l\">\n                                <div className=\"homeworkListDate\">\n                                    ~{stampToDate(homework.deadline)}\n                                </div>\n                            </div>\n                            <div className=\"homeworkListForm_r\">\n                                <div className=\"homeworkListTag\">\n                                    {homework.type}\n                                </div>\n                                <div className=\"homeworkListTitle\">\n                                    {homework.title}\n                                </div>\n                                <div className=\"homeworkListMTag\">\n                                    {chkDeadline(homework.deadline)}\n                                </div>\n                            </div>\n                        </div>\n                    </Link>\n            )}\n        </>\n    )\n}\n\nexport default HomeworkList;","import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { dbService } from 'fbase';\nimport { collection, doc, getDoc } from \"firebase/firestore\"\n\nconst HomeworkDetail = ({ match }) => {\n\n    const [HWContents, setHWContents] = useState({});\n\n    //DB Load\n    const homeworkDB = collection(dbService, \"homework\")\n\n    const key = match.params.id;\n\n    //본문 내용 읽어오기 (onClick Event)\n    const sendHWContents = async () => {\n        try {\n            const HWref = doc(dbService, \"homework\", `${key}`);\n            const getHWContents = await getDoc(HWref);\n            setHWContents(getHWContents.data());\n        } catch (e) {\n            console.error(\"Error onClick: \", e);\n        }\n    };\n\n    useEffect(() => {\n        sendHWContents();\n    }, [key])\n\n    // 타임스템프 to date (yy.mm.dd)\n    const stampToDate_yymmdd = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n        }\n        return;\n    };\n\n    //남은 마감 날짜 계산\n    const printDday = (deadline) => {\n        if (deadline === undefined) {\n            return;\n        }\n        const today = new Date();\n        const endDay = deadline.toDate();\n        const endDayDistance = (endDay - today);\n        const dday = Math.floor(endDayDistance / (1000 * 60 * 60 * 24));\n        if (endDay < today) {\n            return `마감`\n        } else {\n            return (`-${dday}일`)\n        }\n    }\n\n    return (\n        <>\n            <div className=\"homeworkTitleBar\">\n                <span className=\"homeworkTitleBar__type\">{HWContents.type}</span><br />\n                <div className=\"homeworkTitleBar__title\">{HWContents.title}</div><br />\n                <span className=\"homeworkTitleBar__dday\">{printDday(HWContents.deadline)}</span>\n                <span className=\"homeworkTitleBar__deadline\">\n                    ~{stampToDate_yymmdd(HWContents.deadline)}\n                </span>\n            </div>\n            <div className=\"homeworkContents\">\n                {HWContents.content}\n            </div>\n            <Link to={{\n                pathname: `/Homework/${key}/submit`,\n                state: { key }\n            }}>\n                <div className=\"homeworkSubmit\">\n                    <div className=\"homeworkSubmitL\">\n                        <img width=\"50px\" src=\"../img/send.png\" alt=\"send\" />\n                    </div>\n                    <div className=\"homeworkSubmitR\">\n                        숙제 제출\n                    </div>\n                </div>\n            </Link>\n        </>\n    )\n}\n\nexport default HomeworkDetail;","import React, { useState } from \"react\";\nimport { dbService, authService } from 'fbase';\nimport { collection, addDoc } from \"firebase/firestore\";\n\nconst HomeworkSubmit = ({ match, userObj }) => {\n    const [submit, setSubmit] = useState(\"\");\n\n    const HomeworkID = match.params.id;\n    const UID = authService.currentUser.uid;\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const data = {\n                text: submit,\n                data: Date.now(),\n                uid: UID\n            }\n            const loadCollection = collection(dbService, \"homework\", HomeworkID, \"submit\");\n\n            //숙제 내용 DB에 작성\n            const docRef = await addDoc(loadCollection, data);\n            console.log(\"Document written with ID: \", docRef.id);\n        } catch (e) {\n            console.error(\"Error adding document: \", e);\n        }\n        setSubmit(\"\");\n    }\n\n    const onChange = (event) => {\n        const { target: { value }, } = event;\n        setSubmit(value);\n    };\n\n    return (\n        <>\n            {console.log(match.params.id)}\n            <form className=\"HomeworkSubmitTextArea\" onSubmit={onSubmit}>\n                <textarea\n                    className=\"HomeworkSubmitTextArea__textarea\"\n                    value={submit}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"숙제 내용을 입력해 주세요.\"\n                    autoFocus\n                />\n                <input className=\"HomeworkSubmitTextArea__button\" type=\"submit\" value=\"제출\" />\n            </form>\n        </>\n    )\n}\n\nexport default HomeworkSubmit;","export default __webpack_public_path__ + \"static/media/notification.dd9187a1.png\";","export default __webpack_public_path__ + \"static/media/search.c6544d31.png\";","import React from 'react';\nimport notification from '../img/notification.png';\nimport search from '../img/search.png';\n\n\nconst NotiSearchBar = () => {\n    return (\n        <>\n            <div className=\"noti_search\">\n                <div className=\"noti_search_n\">\n                    <span className=\"icon2\">\n                        <img width=\"20px\" src={notification} alt=\"notification\" />\n                    </span>\n                </div>\n                <div className=\"noti_search_s\">\n                    <span className=\"icon2\">\n                        <img width=\"20px\" src={search} alt=\"search\" />\n                    </span>\n                    <span className=\"search\">\n                        <input placeholder=\"Search for anything\" />\n                    </span>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default NotiSearchBar;","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport HomeworkList from 'routes/Homework/HomeworkList';\nimport HomeworkDetail from 'routes/Homework/HomeworkDetail';\nimport HomeworkSubmit from 'routes/Homework/HomeworkSubmit';\nimport NotiSearchBar from 'component/NotiSearchBar';\n\n\nconst Homework = ({ match }) => {\n\n    // 본 내용\n    return (\n        <>\n            {/* 중앙 레이아웃 */}\n            <div className=\"list\">\n                <div className=\"listForm\">\n                    <div className=\"currMenu\">\n                        HOMEWORK\n                    </div>\n                    {/* 숙제 리스트 \b부분 */}\n                    <HomeworkList />\n                </div>\n            </div>\n\n            {/* 우측 레이아웃 */}\n            <article>\n                <div className=\"articleForm\">\n                    <NotiSearchBar />\n                    <Route exact path={`${match.path}`}><p>메뉴를 선택하세요.</p></Route>\n                    <Route\n                        path={`${match.path}/:id`}\n                        render={({ match }) => <HomeworkDetail {...{ match }} />}\n                    />\n                    <Route\n                        path={`${match.path}/:id/submit`}\n                        render={({ match, userObj }) => <HomeworkSubmit {...{ match, userObj }} />}\n                    />\n                </div>\n            </article>\n        </>\n    );\n\n};\n\nexport default Homework;","import React, { useEffect, useState } from \"react\";\nimport { dbService } from 'fbase';\nimport { collection, doc, getDocs, getDoc } from \"firebase/firestore\";\n\nconst Study = () => {\n    //useState\n    const [submits, setSubmits] = useState([]);\n    const [studyContents, setStudyContents] = useState({\n        chapter: \"1과\",\n        content: \"내용입니다.\",\n        date: null,\n        title: \"보고 싶은 내용을 선택하세요.\",\n        type: \"\",\n        page: \"page\",\n    });\n\n    //숙제 리스트 받아오기\n    const homeworkDB = collection(dbService, \"study\")\n    const getSubmits = async () => {\n        const dbSubmits = await getDocs(homeworkDB);\n        dbSubmits.forEach((document) => {\n            const submitObject = {\n                ...document.data(),\n                id: document.id,\n            };\n            setSubmits((prev) => [submitObject, ...prev]);\n        });\n    };\n\n    //본문 내용 읽어오기 (onClick Event)\n    const sendStudyContents = async (key) => {\n        try {\n            const studyRef = doc(dbService, \"study\", `${key}`);\n            const getStudyContents = await getDoc(studyRef);\n            setStudyContents(getStudyContents.data());\n        } catch (e) {\n            console.error(\"Error onClick: \", e);\n        }\n    };\n\n    //db값 얻어오기 useEffect\n    useEffect(() => {\n        getSubmits();\n    }, []);\n\n    // 타임스템프 변환\n    const stampToDate = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getMonth() + 1}/${date.getDate()}`;\n        }\n        return;\n    };\n\n    // 타임스템프 to date (yy.mm.dd)\n    const stampToDate_yymmdd = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n        }\n        return;\n    };\n\n\n    return (\n        <>\n            <div class=\"list\">\n                <div class=\"listForm\">\n                    <div class=\"currMenu\">\n                        STUDY\n                    </div>\n                    {submits.map((study, i) =>\n                        i % 2 === 0 ?\n                            <div class=\"homeworkListForm\" onClick={() => { sendStudyContents(study.id) }}>\n                                <div class=\"homeworkListForm_l\">\n                                    <div class=\"homeworkListDate\">\n                                        {stampToDate(study.date)}\n                                    </div>\n                                </div>\n                                <div class=\"homeworkListForm_r\">\n                                    <div class=\"homeworkListTag\">\n                                        {study.chapter} {study.type}\n                                    </div>\n                                    <div class=\"homeworkListTitle\">\n                                        {study.title}\n                                    </div>\n                                    <div class=\"homeworkListMTag\">\n                                        📚 {study.page}\n                                    </div>\n                                </div>\n                            </div>\n                            :\n                            <div class=\"homeworkListForm2\" onClick={() => { sendStudyContents(study.id) }}>\n                                <div class=\"homeworkListForm_l\">\n                                    <div class=\"homeworkListDate\">\n                                        {stampToDate(study.date)}\n                                    </div>\n                                </div>\n                                <div class=\"homeworkListForm_r\">\n                                    <div class=\"homeworkListTag\">\n                                        {study.chapter} {study.type}\n                                    </div>\n                                    <div class=\"homeworkListTitle\">\n                                        {study.title}\n                                    </div>\n                                    <div class=\"homeworkListMTag\">\n                                        📚 {study.page}\n                                    </div>\n                                </div>\n                            </div>\n                    )}\n\n                </div>\n            </div>\n            <article>\n                <div class=\"articleForm\">\n                    <div class=\"noti_search\">\n                        <div class=\"noti_search_n\">\n                            <span class=\"icon2\">\n                                <img width=\"20px\" src='./img/notification.png' alt=\"notification\" />\n                            </span>\n                        </div>\n                        <div class=\"noti_search_s\">\n                            <span class=\"icon2\">\n                                <img width=\"20px\" src='./img/search.png' alt=\"search\" />\n                            </span>\n                            <span class=\"search\">\n                                <input placeholder=\"Search for anything\" />\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"homeworkTitleDate\">\n                        <div class=\"homeworkContentTitle\">\n                            {studyContents.title}\n                        </div>\n                        <div class=\"homeworkDate\">\n                            {stampToDate_yymmdd(studyContents.date)}\n                        </div>\n                    </div>\n                    <div class=\"homeworkContents\">\n                        {studyContents.content}\n                        <div class=\"homeworkListMTag\">\n                            📚 {studyContents.page}\n                        </div>\n                    </div>\n\n                </div>\n            </article>\n        </>\n    );\n\n};\n\nexport default Study;","import React, { useEffect, useState } from \"react\";\nimport { dbService } from 'fbase';\nimport { collection, doc, getDocs, getDoc } from \"firebase/firestore\";\n\nconst Question = () => {\n\n    //useState\n    const [submits, setSubmits] = useState([]);\n    const [questionContents, setQuestionContents] = useState({\n        content: \"내용입니다.\",\n        date: null,\n        title: \"보고 싶은 내용을 선택하세요.\",\n        secret: false,\n        page: \"page\",\n        writer: \"작성자\",\n    });\n    const [questionReplys, setQuestionReplys] = useState([]);\n\n\n    //숙제 리스트 받아오기\n    const questionDB = collection(dbService, \"question\")\n    const getSubmits = async () => {\n        const dbSubmits = await getDocs(questionDB);\n        dbSubmits.forEach((document) => {\n            const submitObject = {\n                ...document.data(),\n                id: document.id,\n            };\n            setSubmits((prev) => [submitObject, ...prev]);\n        });\n    };\n\n    //본문 내용 읽어오기 (onClick Event)\n    const sendQuestionContents = async (key) => {\n        try {\n            const questionRef = doc(dbService, \"question\", `${key}`);\n            const getQuestionContents = await getDoc(questionRef);\n            setQuestionContents(getQuestionContents.data());\n        } catch (e) {\n            console.error(\"Error onClick: \", e);\n        }\n    };\n\n    // 댓글 읽어오기(본문 내용 읽어오기에 이어서...)\n    // const questionReplyDB = collection(dbService, \"question/reply\")\n    // const getQuestionReplys = async () => {\n    //     const dbQuestionReplys = await getDocs(questionReplyDB);\n    //     dbQuestionReplys.forEach((document) => {\n    //         const questionReplyObject = {\n    //             ...document.data(),\n    //             id: document.id,\n    //         };\n    //         setQuestionReplys((prev) => [questionReplyObject, ...prev]);\n    //     });\n    // };\n\n    //db값 얻어오기 useEffect\n    useEffect(() => {\n        getSubmits();\n        // getQuestionReplys();\n    }, []);\n\n    // 타임스템프 변환\n    const stampToDate = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getMonth() + 1}/${date.getDate()}`;\n        }\n        return;\n    };\n\n    // 타임스템프 to date (yy.mm.dd)\n    const stampToDate_yymmdd = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n        }\n        return;\n    };\n\n    return (\n        <>\n            <div class=\"list\">\n                <div class=\"listForm\">\n                    <div class=\"currMenu\">\n                        QUESTION\n                    </div>\n                    <board>\n                        {submits.map(question =>\n                            <div class=\"boardForm\" onClick={() => { sendQuestionContents(question.id) }}>\n                                <div class=\"boardListNumber\">{question.number}</div>\n                                <div class=\"boardListTitle\">{question.title}</div>\n                                <div class=\"boardListDate\">\n                                    {stampToDate_yymmdd(question.date)}\n                                    <span class=\"boardListWriter\">{question.writer}</span>\n                                </div>\n                            </div>\n                        )}\n                    </board>\n                </div>\n            </div>\n            <article>\n                <div class=\"articleForm\">\n                    <div class=\"noti_search\">\n                        <div class=\"noti_search_n\">\n                            <span class=\"icon2\">\n                                <img width=\"20px\" src='./img/notification.png' alt=\"notification\" />\n                            </span>\n                        </div>\n                        <div class=\"noti_search_s\">\n                            <span class=\"icon2\">\n                                <img width=\"20px\" src='./img/search.png' alt=\"search\" />\n                            </span>\n                            <span class=\"search\">\n                                <input placeholder=\"Search for anything\" />\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"homeworkTitleDate\">\n                        <div class=\"homeworkContentTitle\">\n                            {questionContents.title}\n                        </div>\n                        <div class=\"homeworkDate\">\n                            {stampToDate_yymmdd(questionContents.date)}\n                        </div>\n                    </div>\n                    <div class=\"homeworkContents\">\n                        {questionContents.content}\n                        <div class=\"name\">\n                            {questionContents.writer}\n                        </div>\n                    </div>\n                    <div class=\"replyForm\">\n                        <div class=\"replyFormL\">\n                            <img width=\"50px\" src=\"./img/reply-message.png\" alt=\"reply\" class=\"replyImgStyle\" />\n                        </div>\n                        <div class=\"replyFormR\">\n                            의미가 조금 달라요.\n                            <div class=\"name\">\n                                선생님\n                            </div>\n                        </div>\n\n                    </div>\n\n                </div>\n            </article>\n        </>\n    );\n\n};\n\nexport default Question;","import React, { useEffect, useState } from \"react\";\nimport { dbService } from 'fbase';\nimport { collection, doc, getDocs, getDoc } from \"firebase/firestore\";\n\nconst Notice = () => {\n\n    //useState\n    const [submits, setSubmits] = useState([]);\n    const [noticeContents, setNoticeContents] = useState({\n        content: \"내용입니다.\",\n        date: null,\n        title: \"보고 싶은 내용을 선택하세요.\",\n        secret: false,\n        page: \"page\",\n        writer: \"작성자\",\n    });\n\n\n    //숙제 리스트 받아오기\n    const noticeDB = collection(dbService, \"notice\")\n    const getSubmits = async () => {\n        const dbSubmits = await getDocs(noticeDB);\n        dbSubmits.forEach((document) => {\n            const submitObject = {\n                ...document.data(),\n                id: document.id,\n            };\n            setSubmits((prev) => [submitObject, ...prev]);\n        });\n    };\n\n    //본문 내용 읽어오기 (onClick Event)\n    const sendNoticeContents = async (key) => {\n        try {\n            const noticeRef = doc(dbService, \"notice\", `${key}`);\n            const getNoticeContents = await getDoc(noticeRef);\n            setNoticeContents(getNoticeContents.data());\n        } catch (e) {\n            console.error(\"Error onClick: \", e);\n        }\n    };\n\n    //db값 얻어오기 useEffect\n    useEffect(() => {\n        getSubmits();\n    }, []);\n\n    // 타임스템프 변환\n    const stampToDate = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getMonth() + 1}/${date.getDate()}`;\n        }\n        return;\n    };\n\n    // 타임스템프 to date (yy.mm.dd)\n    const stampToDate_yymmdd = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n        }\n        return;\n    };\n\n    return (\n        <>\n            <div class=\"list\">\n                <div class=\"listForm\">\n                    <div class=\"currMenu\">\n                        NOTICE\n                    </div>\n                    <board>\n                        {submits.map(notice =>\n                            <div class=\"boardForm\" onClick={() => { sendNoticeContents(notice.id) }}>\n                                <div class=\"boardListNumber\">{notice.number}</div>\n                                <div class=\"boardListTitle\">{notice.title}</div>\n                                <div class=\"boardListDate\">{stampToDate_yymmdd(notice.date)}</div>\n                            </div>\n                        )}\n                    </board>\n                </div>\n            </div>\n            <article>\n                <div class=\"articleForm\">\n                    <div class=\"notiBar\">\n                        <div class=\"noti_search\">\n                            <div class=\"noti_search_n\">\n                                <span class=\"icon2\">\n                                    <img width=\"20px\" src='./img/notification.png' alt=\"notification\" />\n                                </span>\n                            </div>\n                            <div class=\"noti_search_s\">\n                                <span class=\"icon2\">\n                                    <img width=\"20px\" src='./img/search.png' alt=\"search\" />\n                                </span>\n                                <span class=\"search\">\n                                    <input placeholder=\"Search for anything\" />\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"homeworkTitleDate\">\n                        <div class=\"homeworkContentTitle\">\n                            {noticeContents.title}\n                        </div>\n                        <div class=\"homeworkDate\">\n                            {stampToDate_yymmdd(noticeContents.date)}\n                        </div>\n                    </div>\n                    <div class=\"homeworkContents\">\n                        {noticeContents.content}\n                    </div>\n                    <div class=\"replyForm\">\n                        <div class=\"replyFormL\">\n                            <img width=\"50px\" src=\"./img/reply-message.png\" alt=\"reply\" class=\"replyImgStyle\" />\n                        </div>\n                        <div class=\"replyFormR\">\n                            알겠습니다!!\n                            <div class=\"name\">\n                                \b린짱\n                            </div>\n                        </div>\n\n                    </div>\n\n                </div>\n            </article>\n        </>\n    );\n\n};\n\nexport default Notice;","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from 'react-router';\nimport { authService } from 'fbase';\n\nconst Layout = () => {\n\n    // 로딩되면 첫 번째 메뉴\n    const firstMenu = () => {\n        document.querySelector(`#${navCurrMenu}`).style.color = \"#3f3e3e\";\n    };\n    useEffect(firstMenu, []);\n\n    // 로그아웃 function\n    const history = useHistory();\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n\n    // 메뉴 onClick 이벤트\n    const [navCurrMenu, setNavCurrMenu] = useState(`MYCLASSES`)\n\n    const moveRoute = (menu) => {\n        const menuColorReset = () => {\n            document.querySelector(\"#MYCLASSES\").style.color = \"#cac9cd\";\n            document.querySelector(\"#HOMEWORK\").style.color = \"#cac9cd\";\n            document.querySelector(\"#STUDY\").style.color = \"#cac9cd\";\n            document.querySelector(\"#QUESTION\").style.color = \"#cac9cd\";\n            document.querySelector(\"#NOTICE\").style.color = \"#cac9cd\";\n        }\n\n        const currentMenuColorChange = () => {\n            document.querySelector(`#${menu}`).style.color = \"#3f3e3e\";\n        }\n\n        menuColorReset();\n        currentMenuColorChange();\n\n        switch (menu) {\n            case `MYCLASSES`:\n                setNavCurrMenu(menu);\n                history.push({\n                    pathname: \"/\",\n                    state: { navCurrMenu: navCurrMenu }\n                });\n                break;\n            case `HOMEWORK`:\n                setNavCurrMenu(menu);\n                history.push({\n                    pathname: \"/Homework\",\n                    state: { navCurrMenu: navCurrMenu }\n                });\n                break;\n            case `STUDY`:\n                setNavCurrMenu(menu);\n                history.push({\n                    pathname: \"/Study\",\n                    state: { navCurrMenu: navCurrMenu }\n                });\n                break;\n            case `QUESTION`:\n                setNavCurrMenu(menu);\n                history.push({\n                    pathname: \"/Question\",\n                    state: { navCurrMenu: navCurrMenu }\n                });\n                break;\n            case `NOTICE`:\n                setNavCurrMenu(menu);\n                history.push({\n                    pathname: \"/Notice\",\n                    state: { navCurrMenu: navCurrMenu }\n                });\n                break;\n            default:\n                break;\n        }\n\n    };\n    return (\n        <>\n            <div id=\"logoLink\" onClick={() => { moveRoute('MYCLASSES') }}>\n                <span class=\"logo\">\n                    <span class=\"logoWork\">Class</span>\n                    Work\n                </span>\n                <div class=\"className\">\n                    한국어센터 1급 2반\n                </div>\n            </div>\n            <div class=\"navBar\">\n                <div class=\"userInfo\">\n                    <span class=\"userInfo_name\">{authService.currentUser.displayName} 님</span><br />\n                    <span class=\"userInfo_info\">{authService.currentUser.email}</span>\n                </div>\n                <div class=\"signOut\" onClick={onLogOutClick}>SIGN OUT</div>\n                <div class=\"menuForm\">\n                    <ul class=\"ulMenu\">\n                        <div class=\"menu\" id=\"MYCLASSES\">\n                            <li onClick={() => { moveRoute('MYCLASSES') }}>MY CLASSES</li>\n                        </div>\n                        <div class=\"menu\" id=\"HOMEWORK\">\n                            <li onClick={() => { moveRoute('HOMEWORK') }}>HOMEWORK</li>\n                        </div>\n                        <div class=\"menu\" id=\"STUDY\">\n                            <li onClick={() => { moveRoute('STUDY') }}>STUDY</li>\n                        </div>\n                        <div class=\"menu\" id=\"QUESTION\">\n                            <li onClick={() => { moveRoute('QUESTION') }}>QUESTION</li>\n                        </div>\n                        <div class=\"menu\" id=\"NOTICE\">\n                            <li onClick={() => { moveRoute('NOTICE') }}>NOTICE</li>\n                        </div>\n                    </ul>\n                </div>\n            </div >\n        </>\n\n\n\n    );\n};\n\nexport default Layout;","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Router, Switch, Route } from \"react-router-dom\";\nimport Home from 'routes/Home';\nimport Login from 'routes/Login';\nimport Homework from 'routes/Homework';\nimport Study from 'routes/Study';\nimport Question from 'routes/Question'\nimport Notice from 'routes/Notice';\nimport Navigation from 'component/Navigation';\n\n\nconst AppRouter = ({ isLoggedIn }) => {\n\n    // 모바일 \b메뉴 열기, 닫기 스크립트\n    const [navBar, setNavBar] = useState(false);\n    const mobileMenuOpen = () => {\n        if (navBar) {\n            document.querySelector('.navBar').style.display = 'none';\n            setNavBar(false);\n        } else {\n            document.querySelector('.navBar').style.display = 'block';\n            setNavBar(true);\n        }\n    };\n\n    // 브라우저 resize할 때, 메뉴 open, close\n    const handleMobileMenu = () => {\n        if (window.innerWidth <= 800) {\n            document.querySelector('.navBar').style.display = 'none';\n            setNavBar(false);\n        } else {\n            document.querySelector('.navBar').style.display = 'block';\n            setNavBar(true);\n        }\n    };\n\n    useEffect(() => {\n        if (isLoggedIn) {\n            window.addEventListener('resize', handleMobileMenu);\n            document.querySelector('.ulMenu').addEventListener('click', handleMobileMenu);\n            return () => {\n                window.removeEventListener('resize', handleMobileMenu);\n            }\n        }\n    }, []);\n\n    return (\n        // <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <BrowserRouter basename=\"/classWork\">\n            <Switch>\n                {\n                    isLoggedIn\n                        ? <>\n                            < div class=\"menuBTN\" onClick={mobileMenuOpen}>\n                                <span class=\"icon\">\n                                    <img width=\"20px\" src='./img/list.png' alt=\"notification\" />\n                                </span>\n                            </div>\n                            <div class=\"box\">\n                                <nav>\n                                    <Navigation />\n                                </nav>\n                                < Route exact path=\"/\" component={Home} />\n                                <Route Route path=\"/Homework\" component={Homework} />\n                                < Route path=\"/Study\" component={Study} />\n                                < Route path=\"/Question\" component={Question} />\n                                < Route path=\"/Notice\" component={Notice} />\n                            </div>\n                            <div class=\"copyright\">\n                                <footer>&copy; Class Work {new Date().getFullYear()}</footer>\n                            </div>\n                        </>\n                        : <Route exact=\"exact\" path=\"/\"><Login /></Route>\n                }\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\nimport 'css/style.css'\nimport 'css/nav.css'\nimport 'css/view.css'\nimport 'css/list.css'\nimport AppRouter from 'component/Router';\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true)\n      } else {\n        setIsLoggedIn(false)\n      }\n      setInit(true);\n    })\n  }, []);\n\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={isLoggedIn} /> :\n        <>\n          <div class=\"loading\">\n            <div class=\"logo\">\n              <span class=\"logoWork\">Class</span>\n              Work\n            </div>\n            <div class=\"loading__message\">Loading...</div>\n          </div>\n        </>\n      }\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'component/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}