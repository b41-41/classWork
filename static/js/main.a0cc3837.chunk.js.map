{"version":3,"sources":["fbase.js","routes/Home.js","routes/Login.js","routes/Homework/HomeworkList.js","routes/Homework/HomeworkDetail.js","routes/Homework/index.js","routes/Study/index.js","routes/Question/index.js","routes/Notice/index.js","component/Navigation.js","component/Router.js","component/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","authService","getAnalytics","getAuth","dbService","getFirestore","Home","match","useState","studyContents","setStudyContents","noticeContents","setNoticeContents","homeworkContents","setHomeworkContents","sendContents","a","noticeRef","collection","studyRef","homeworkRef","getDocs","forEach","document","noticeObject","data","id","prev","sort","b","date","studyObject","homeworkObject","console","error","useEffect","stampToDate_yymmdd","timestamp","toDate","getFullYear","getMonth","getDate","class","width","map","notice","i","title","content","homework","to","pathname","src","alt","placeholder","height","next","Login","email","setEmail","password","setPassword","newAccount","setNewAccount","setError","onChange","event","target","name","value","onSubmit","preventDefault","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","log","message","type","required","onClick","provider","GoogleAuthProvider","signInWithPopup","GithubAuthProvider","HomeworkList","submits","setSubmits","history","useHistory","homeworkDB","getSubmits","orderBy","submitObject","deadline","sendHWContents","key","HWref","doc","getDoc","getHWContents","location","push","stampToDate","chkDeadline","today","Date","className","HomeworkDetail","HWContents","setHWContents","params","Homework","submit","setSubmit","addDoc","serverTimestamp","docRef","maxLength","path","exact","component","Study","chapter","page","sendStudyContents","getStudyContents","study","Question","secret","writer","questionContents","setQuestionContents","questionDB","sendQuestionContents","questionRef","getQuestionContents","question","number","Notice","noticeDB","sendNoticeContents","getNoticeContents","Layout","querySelector","navCurrMenu","style","color","setNavCurrMenu","moveRoute","menu","state","currentUser","displayName","signOut","AppRouter","isLoggedIn","navBar","setNavBar","handleMobileMenu","window","innerWidth","display","addEventListener","removeEventListener","basename","Navigation","App","init","setInit","setIsLoggedIn","onAuthStateChanged","user","ReactDOM","render","StrictMode","getElementById"],"mappings":"4XAUMA,EAAiB,CACnBC,OAAQC,0CACRC,WAAYD,kCACZE,UAAWF,kBACXG,cAAeH,8BACfI,kBAAmBJ,eACnBK,MAAOL,4CACPM,cAAeN,gBAIbO,EAAMC,YAAcV,GAGbW,GAFOD,YAAcV,GAChBY,YAAaH,GACJI,eACdC,EAAYC,c,OCmJVC,EAvKF,SAAC,GAAc,EAAZC,MAAa,IAAD,EACxB,EAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA4CF,mBAAS,IAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAgDJ,mBAAS,IAAzD,mBAAOK,EAAP,KAAyBC,EAAzB,KAGMC,EAAY,uCAAG,gCAAAC,EAAA,sEAEPC,EAAYC,YAAWd,EAAW,UAClCe,EAAWD,YAAWd,EAAW,SACjCgB,EAAcF,YAAWd,EAAW,YAJ7B,SAMmBiB,YAAQJ,GAN3B,qBAOKK,SAAQ,SAACC,GACvB,IAAMC,EAAY,2BACXD,EAASE,QADE,IAEdC,GAAIH,EAASG,KAEjBd,GAAkB,SAACe,GAAD,MAAU,CAACH,GAAD,mBAAkBG,IAAMC,MAAK,SAAUZ,EAAGa,GAAK,OAAOA,EAAEC,KAAOd,EAAEc,cAZpF,UAekBT,YAAQF,GAf1B,sBAgBIG,SAAQ,SAACC,GACtB,IAAMQ,EAAW,2BACVR,EAASE,QADC,IAEbC,GAAIH,EAASG,KAEjBhB,GAAiB,SAACiB,GAAD,MAAU,CAACI,GAAD,mBAAiBJ,IAAMC,MAAK,SAAUZ,EAAGa,GAAK,OAAOA,EAAEC,KAAOd,EAAEc,cArBlF,UAwBqBT,YAAQD,GAxB7B,eAyBOE,SAAQ,SAACC,GACzB,IAAMS,EAAc,2BACbT,EAASE,QADI,IAEhBC,GAAIH,EAASG,KAEjBZ,GAAoB,SAACa,GAAD,MAAU,CAACK,GAAD,mBAAoBL,IAAMC,MAAK,SAAUZ,EAAGa,GAAK,OAAOA,EAAEC,KAAOd,EAAEc,cA9BxF,kDAkCbG,QAAQC,MAAM,kBAAd,MAlCa,0DAAH,qDAsClBC,qBAAU,WACNpB,MACD,IAGH,IAAMqB,EAAqB,SAACC,GACxB,GAAIA,EAAW,CACX,IAAMP,EAAOO,EAAUC,SACvB,MAAM,GAAN,OAAUR,EAAKS,cAAf,YAAgCT,EAAKU,WAAa,EAAlD,YAAuDV,EAAKW,aAKpE,OACI,qCACI,qBAAKC,MAAM,OAAX,SACI,sBAAKA,MAAM,WAAX,UACI,qBAAKA,MAAM,WAAX,wBAGA,qBAAKA,MAAM,gBAAX,8DAGA,sBAAKA,MAAM,cAAX,UACI,qBAAKA,MAAM,eAAX,SACI,wBAAKA,MAAM,aAAaC,MAAM,QAA9B,sBAA2C,SAA3C,oBAAuD,qBAAvD,oBAA+E,WAA/E,MAEJ,sBAAKD,MAAM,cAAX,UACI,sBAAMA,MAAM,aAAZ,kBAAoC,uBACpC,sBAAMA,MAAM,iBAAZ,gCAAuC,uBACvC,sBAAMA,MAAM,aAAZ,oBAAsC,uBACtC,sBAAMA,MAAM,iBAAZ,kCAAwD,uBACxD,sBAAMA,MAAM,cAAZ,6CAIR,mDACA,sBAAKA,MAAM,UAAX,UACI,oBAAIA,MAAM,kBAAV,SACK/B,EAAeiC,KAAI,SAACC,EAAQC,GAAT,OAChBA,EAAI,EACA,qBAAIJ,MAAM,2BAAV,UACI,sBAAKA,MAAM,oCAAX,UACI,sBAAMA,MAAM,iCAAZ,SAA8CG,EAAOE,QACrD,sBAAML,MAAM,gCAAZ,SAA6CN,EAAmBS,EAAOf,WAE3E,sBAAMY,MAAM,gCAAZ,SAA6CG,EAAOG,aAEtD,QAGd,oBAAIN,MAAM,oBAAV,SACK7B,EAAiB+B,KAAI,SAACK,EAAUH,GAAX,OAClBA,EAAI,GACCA,EAAI,GAAK,IAAM,EACZ,cAAC,IAAD,CAAMI,GAAI,CAAEC,SAAS,aAAD,OAAeF,EAASvB,KAA5C,SACI,qBAAIgB,MAAM,yBAAV,UACI,sBAAMA,MAAM,+BAAZ,SAA4CO,EAASF,QACrD,sBAAML,MAAM,8BAAZ,SAA2CN,EAAmBa,EAASnB,aAI/E,cAAC,IAAD,CAAMoB,GAAI,CAAEC,SAAS,aAAD,OAAeF,EAASvB,KAA5C,SACI,qBAAIgB,MAAM,0BAAV,UACI,sBAAMA,MAAM,+BAAZ,SAA4CO,EAASF,QACrD,sBAAML,MAAM,8BAAZ,SAA2CN,EAAmBa,EAASnB,aAGjF,WAMlB,0CACA,qBAAKY,MAAM,WAAX,+BAKR,kCACI,sBAAKA,MAAM,cAAX,UACI,sBAAKA,MAAM,cAAX,UACI,qBAAKA,MAAM,gBAAX,SACI,sBAAMA,MAAM,QAAZ,SACI,qBAAKC,MAAM,OAAOS,IAAI,yBAAyBC,IAAI,qBAG3D,sBAAKX,MAAM,gBAAX,UACI,sBAAMA,MAAM,QAAZ,SACI,qBAAKC,MAAM,OAAOS,IAAI,mBAAmBC,IAAI,aAEjD,sBAAMX,MAAM,SAAZ,SACI,uBAAOY,YAAY,gCAI/B,4CACA,sBAAKZ,MAAM,YAAX,UACI,qBAAKA,MAAM,iBAAX,SACI,qBAAKa,OAAO,QAAQH,IAAI,kBAAkBC,IAAI,iBAElD,sBAAKX,MAAM,oBAAX,UACI,sBAAMA,MAAM,cAAZ,uCACA,qBAAKA,MAAM,iBAAX,SAA6BjC,EAAcmC,KAAI,SAACnB,EAAMqB,GAAP,OAAmB,IAANA,EAAUrB,EAAKsB,MAAQ,cAG3F,4CACA,sBAAKL,MAAM,YAAX,UACI,sBAAKA,MAAM,oBAAX,UACI,sBAAMA,MAAM,cAAZ,uCACA,sBAAMA,MAAM,iBAAZ,SAA8BjC,EAAcmC,KAAI,SAACnB,EAAMqB,GAAP,OAAmB,IAANA,EAAUrB,EAAK+B,KAAO,WAEvF,qBAAKd,MAAM,iBAAX,SACI,qBAAKa,OAAO,QAAQH,IAAI,sBAAsBC,IAAI,6BC/D/DI,G,MA/FD,WACV,MAA0BjD,mBAAS,IAAnC,mBAAOkD,EAAP,KAAcC,EAAd,KACA,EAAgCnD,mBAAS,IAAzC,mBAAOoD,EAAP,KAAiBC,EAAjB,KACA,EAAoCrD,oBAAS,GAA7C,mBAAOsD,EAAP,KAAmBC,EAAnB,KACA,EAA0BvD,mBAAS,IAAnC,mBAAcwD,GAAd,WACMC,EAAW,SAACC,GACd,MAAoCA,EAA5BC,OAAUC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,MACX,UAATD,EACAT,EAASU,GACO,aAATD,GACPP,EAAYQ,IAGdC,EAAQ,uCAAG,WAAOJ,GAAP,iBAAAlD,EAAA,yDACbkD,EAAMK,iBADO,SAIHC,EAAOrE,eAET2D,EANK,gCAQQW,YAA+BD,EAAMd,EAAOE,GARpD,OAQLnC,EARK,+CAWQiD,YAA2BF,EAAMd,EAAOE,GAXhD,QAWLnC,EAXK,eAaTQ,QAAQ0C,IAAIlD,GAbH,kDAeTuC,EAAS,KAAMY,SAfN,0DAAH,sDAiCd,OACI,mCACI,uBAAMlC,MAAM,QAAQ4B,SAAUA,EAA9B,UACI,sBAAK5B,MAAM,WAAX,UACI,uBAAMA,MAAM,OAAZ,UACI,sBAAMA,MAAM,WAAZ,mBACA,2CAIJ,qBAAKA,MAAM,YAAX,+DAIJ,qBAAKA,MAAM,SAAX,SACI,uBACI0B,KAAK,QACLS,KAAK,QACLnC,MAAM,KACNY,YAAY,QACZe,MAAOX,EACPO,SAAUA,MAElB,qBAAKvB,MAAM,SAAX,SACI,uBACI0B,KAAK,WACLS,KAAK,WACLnC,MAAM,KACNoC,SAAS,WACTT,MAAOT,EACPK,SAAUA,EACVX,YAAY,eAEpB,qBAAKZ,MAAM,cAAX,SACI,uBACImC,KAAK,SACLR,MAAOP,EAAa,iBAAmB,QACvCpB,MAAM,UAEd,sBAAMA,MAAM,cAAcqC,QApDhB,kBAAMhB,GAAc,SAACpC,GAAD,OAAWA,MAoDzC,SAAmDmC,EAAa,8CAAkB,kDAClF,qBAAKpB,MAAM,SAAX,SACI,wBAAQ0B,KAAK,SAAS1B,MAAM,YAAYqC,QArDlC,SAACb,GACnB,IAAkBE,EAAWF,EAArBC,OAAUC,KACZI,EAAOrE,cACb,GAAa,WAATiE,EAAmB,CACnB,IAAMY,EAAW,IAAIC,IACrBC,YAAgBV,EAAMQ,QACnB,GAAa,WAATZ,EAAmB,CAC1B,IAAMY,EAAW,IAAIG,IACrBD,YAAgBV,EAAMQ,KA6Cd,2CCqDLI,EA5IM,WACjB,MAA8B5E,mBAAS,IAAvC,mBAAO6E,EAAP,KAAgBC,EAAhB,KACMC,EAAUC,cAGVC,EAAavE,YAAWd,EAAW,YACnCsF,EAAU,uCAAG,sBAAA1E,EAAA,sEACSK,YAAQoE,EAAYE,YAAQ,aADrC,cAELrE,SAAQ,SAACC,GACf,IAAMqE,EAAY,2BACXrE,EAASE,QADE,IAEdC,GAAIH,EAASG,KAEjB4D,GAAW,SAAC3D,GAAD,MAAU,CAACiE,GAAD,mBAAkBjE,IAAMC,MAAK,SAAUZ,EAAGa,GAAK,OAAOA,EAAEgE,SAAW7E,EAAE6E,kBAP/E,2CAAH,qDAYVC,EAAc,uCAAG,WAAOC,GAAP,iBAAA/E,EAAA,sEAETgF,EAAQC,YAAI7F,EAAW,WAAZ,UAA2B2F,IAF7B,SAGaG,YAAOF,GAHpB,OAGTG,EAHS,OAIflE,QAAQ0C,IAAIwB,EAAc1E,QACH0E,EAAc1E,OAEP,cAA9B8D,EAAQa,SAASjD,SACboC,EAAQc,KAAK,CACTlD,SAAS,YAAD,OAAc4C,KAW1BR,EAAQc,KAAK,CACTlD,SAAS,GAAD,OAAK4C,KArBN,kDAgCf9D,QAAQC,MAAM,kBAAd,MAhCe,0DAAH,sDAqCpBC,qBAAU,WACNuD,MACD,IAGH,IAAMY,EAAc,SAACjE,GACjB,GAAIA,EAAW,CACX,IAAMP,EAAOO,EAAUC,SACvB,MAAM,GAAN,OAAUR,EAAKU,WAAa,EAA5B,YAAiCV,EAAKW,aAexC8D,EAAc,SAACV,GACjB,IAAMW,EAAQ,IAAIC,KAClB,OAAIZ,EAASvD,SAAWkE,EACd,4DAEA,iDAId,OACI,mCAEKnB,EAAQzC,KAAI,SAACK,EAAUH,GAAX,OACTA,EAAI,IAAM,EACN,sBAAK4D,UAAU,mBAAqC3B,QAAS,WAAQe,EAAe7C,EAASvB,KAA7F,UACI,qBAAKgF,UAAU,qBAAf,SACI,sBAAKA,UAAU,mBAAf,cACMJ,EAAYrD,EAAS4C,eAG/B,sBAAKa,UAAU,qBAAf,UACI,qBAAKA,UAAU,kBAAf,qBAGA,qBAAKA,UAAU,oBAAf,SACKzD,EAAS4B,OAEd,qBAAK6B,UAAU,oBAAf,SACKzD,EAASD,UAEd,qBAAK0D,UAAU,mBAAf,SACKH,EAAYtD,EAAS4C,iBAjBK5C,EAASvB,IAsBhD,sBAAKgF,UAAU,oBAAsC3B,QAAS,WAAQe,EAAe7C,EAASvB,KAA9F,UACI,qBAAKgF,UAAU,qBAAf,SACI,sBAAKA,UAAU,mBAAf,cACMJ,EAAYrD,EAAS4C,eAG/B,sBAAKa,UAAU,qBAAf,UACI,qBAAKA,UAAU,kBAAf,qBAGA,qBAAKA,UAAU,oBAAf,SACKzD,EAAS4B,OAEd,qBAAK6B,UAAU,oBAAf,SACKzD,EAASD,UAEd,qBAAK0D,UAAU,mBAAf,SACKH,EAAYtD,EAAS4C,iBAjBM5C,EAASvB,UCvDtDiF,EA5DQ,SAAC,GAAe,IAAbpG,EAAY,EAAZA,MAGtB,EAAoCC,mBAAS,IAA7C,mBAAOoG,EAAP,KAAmBC,EAAnB,KAKMd,GAFa7E,YAAWd,EAAW,YAE7BG,EAAMuG,OAAOpF,IAGnBoE,EAAc,uCAAG,8BAAA9E,EAAA,sEAETgF,EAAQC,YAAI7F,EAAW,WAAZ,UAA2B2F,IAF7B,SAGaG,YAAOF,GAHpB,OAGTG,EAHS,OAIfU,EAAcV,EAAc1E,QAJb,gDAMfQ,QAAQC,MAAM,kBAAd,MANe,yDAAH,qDAUpBC,qBAAU,WACN2D,MACD,CAACC,IAWJ,OACI,qCACI,sBAAKW,UAAU,oBAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,sBAAMA,UAAU,6BAAhB,SAA8CE,EAAW/B,OACzD,sBAAM6B,UAAU,6BAAhB,SAA8CE,EAAW7D,WAE7D,qBAAK2D,UAAU,eAAf,SAfe,SAACrE,GACxB,GAAIA,EAAW,CACX,IAAMP,EAAOO,EAAUC,SACvB,MAAM,GAAN,OAAUR,EAAKS,cAAf,YAAgCT,EAAKU,WAAa,EAAlD,YAAuDV,EAAKW,YAanDL,CAAmBwE,EAAW9E,WAGvC,qBAAK4E,UAAU,mBAAf,SACKE,EAAW5D,UAEhB,sBAAK0D,UAAU,iBAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAK/D,MAAM,OAAOS,IAAI,kBAAkBC,IAAI,WAEhD,qBAAKqD,UAAU,kBAAf,8CCuGDK,EAvJE,SAAC,EAAWhB,GAAS,IAAlBxF,EAAiB,EAAjBA,MAEhB,EAA4BC,mBAAS,IAArC,mBAAOwG,EAAP,KAAeC,EAAf,KACA,EAA8BzG,mBAAS,IAAvC,mBAAgB8E,GAAhB,WACA,EAAoC9E,mBAAS,CACzCwC,QAAS,4FACTlB,KAAM,KACNiB,MAAO,4DACP8B,KAAM,KAJV,mBAQMY,GARN,UAQmBvE,YAAWd,EAAW,aACnCsF,EAAU,uCAAG,sBAAA1E,EAAA,sEACSK,YAAQoE,EAAYE,YAAQ,aADrC,cAELrE,SAAQ,SAACC,GACf,IAAMqE,EAAY,2BACXrE,EAASE,QADE,IAEdC,GAAIH,EAASG,KAEjB4D,GAAW,SAAC3D,GAAD,MAAU,CAACiE,GAAD,mBAAkBjE,IAAMC,MAAK,SAAUZ,EAAGa,GAAK,OAAOA,EAAEgE,SAAW7E,EAAE6E,kBAP/E,2CAAH,qDAwBhB1D,qBAAU,WACNuD,MACD,IAGH,IAAMpB,EAAQ,uCAAG,WAAOJ,GAAP,eAAAlD,EAAA,6DACbkD,EAAMK,iBADO,kBAGY2C,YAAOhG,YAAWd,EAAW,YAAa,CAC3D4C,QAASgE,EACTlF,KAAMqF,cACNtC,KAAK,OACL9B,MAAOiE,EACPnB,SAAUsB,gBARL,OAGHC,EAHG,OAWTnF,QAAQ0C,IAAI,6BAA8ByC,EAAO1F,IAXxC,gDAaTO,QAAQC,MAAM,0BAAd,MAbS,QAeb+E,EAAU,IAfG,yDAAH,sDAoDd,OACI,qCAEI,qBAAKP,UAAU,OAAf,SACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,WAAf,sBAIA,uBAAMpC,SAAUA,EAAhB,UACI,uBAAOD,MAAO2C,EAAQ/C,SA5CzB,SAACC,GACd,IAAkBG,EAAaH,EAAvBC,OAAUE,MAClB4C,EAAU5C,IA0CgDQ,KAAK,OAAOvB,YAAY,YAAY+D,UAAW,MACzF,uBAAOxC,KAAK,SAASR,MAAM,cAG/B,cAAC,EAAD,CACI2C,QAAM,EACN3B,SAAO,EACPuB,YAAU,EACVd,gBAAc,SAM1B,kCACI,sBAAKY,UAAU,cAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,sBAAMA,UAAU,QAAhB,SACoB,cAAfnG,EAAM+G,KACH,qBAAK3E,MAAM,OAAOS,IAAI,yBAAyBC,IAAI,iBAEnD,qBAAKV,MAAM,OAAOS,IAAI,0BAA0BC,IAAI,qBAIhE,sBAAKqD,UAAU,gBAAf,UACI,sBAAMA,UAAU,QAAhB,SACI,qBAAK/D,MAAM,OAAOS,IAAI,mBAAmBC,IAAI,aAEjD,sBAAMqD,UAAU,SAAhB,SACI,uBAAOpD,YAAY,gCAI/B,cAAC,IAAD,CAAOiE,OAAK,EAACD,KAAI,UAAK/G,EAAM+G,MAA5B,SAAoC,qFACpC,cAAC,IAAD,CACIA,KAAI,UAAK/G,EAAM+G,KAAX,QACJE,UAAWb,aCSpBc,EA3JD,WAEV,MAA8BjH,mBAAS,IAAvC,mBAAO6E,EAAP,KAAgBC,EAAhB,KACA,EAA0C9E,mBAAS,CAC/CkH,QAAS,UACT1E,QAAS,kCACTlB,KAAM,KACNiB,MAAO,+EACP8B,KAAM,GACN8C,KAAM,SANV,mBAAOlH,EAAP,KAAsBC,EAAtB,KAUM+E,EAAavE,YAAWd,EAAW,SACnCsF,EAAU,uCAAG,sBAAA1E,EAAA,sEACSK,YAAQoE,GADjB,cAELnE,SAAQ,SAACC,GACf,IAAMqE,EAAY,2BACXrE,EAASE,QADE,IAEdC,GAAIH,EAASG,KAEjB4D,GAAW,SAAC3D,GAAD,OAAWiE,GAAX,mBAA4BjE,UAP5B,2CAAH,qDAYViG,EAAiB,uCAAG,WAAO7B,GAAP,iBAAA/E,EAAA,sEAEZG,EAAW8E,YAAI7F,EAAW,QAAZ,UAAwB2F,IAF1B,SAGaG,YAAO/E,GAHpB,OAGZ0G,EAHY,OAIlBnH,EAAiBmH,EAAiBpG,QAJhB,gDAMlBQ,QAAQC,MAAM,kBAAd,MANkB,yDAAH,sDAWvBC,qBAAU,WACNuD,MACD,IAGH,IAAMY,EAAc,SAACjE,GACjB,GAAIA,EAAW,CACX,IAAMP,EAAOO,EAAUC,SACvB,MAAM,GAAN,OAAUR,EAAKU,WAAa,EAA5B,YAAiCV,EAAKW,aAe9C,OACI,qCACI,qBAAKC,MAAM,OAAX,SACI,sBAAKA,MAAM,WAAX,UACI,qBAAKA,MAAM,WAAX,mBAGC2C,EAAQzC,KAAI,SAACkF,EAAOhF,GAAR,OACTA,EAAI,IAAM,EACN,sBAAKJ,MAAM,mBAAmBqC,QAAS,WAAQ6C,EAAkBE,EAAMpG,KAAvE,UACI,qBAAKgB,MAAM,qBAAX,SACI,qBAAKA,MAAM,mBAAX,SACK4D,EAAYwB,EAAMhG,UAG3B,sBAAKY,MAAM,qBAAX,UACI,qBAAKA,MAAM,kBAAX,SACKoF,EAAMJ,UAEX,qBAAKhF,MAAM,oBAAX,SACKoF,EAAMjD,OAEX,qBAAKnC,MAAM,oBAAX,SACKoF,EAAMjD,OAEX,sBAAKnC,MAAM,mBAAX,0BACQoF,EAAMH,cAKtB,sBAAKjF,MAAM,oBAAoBqC,QAAS,WAAQ6C,EAAkBE,EAAMpG,KAAxE,UACI,qBAAKgB,MAAM,qBAAX,SACI,qBAAKA,MAAM,mBAAX,SACK4D,EAAYwB,EAAMhG,UAG3B,sBAAKY,MAAM,qBAAX,UACI,qBAAKA,MAAM,kBAAX,SACKoF,EAAMJ,UAEX,qBAAKhF,MAAM,oBAAX,SACKoF,EAAMjD,OAEX,qBAAKnC,MAAM,oBAAX,SACKoF,EAAMjD,OAEX,sBAAKnC,MAAM,mBAAX,0BACQoF,EAAMH,sBAQtC,kCACI,sBAAKjF,MAAM,cAAX,UACI,sBAAKA,MAAM,cAAX,UACI,qBAAKA,MAAM,gBAAX,SACI,sBAAMA,MAAM,QAAZ,SACI,qBAAKC,MAAM,OAAOS,IAAI,yBAAyBC,IAAI,qBAG3D,sBAAKX,MAAM,gBAAX,UACI,sBAAMA,MAAM,QAAZ,SACI,qBAAKC,MAAM,OAAOS,IAAI,mBAAmBC,IAAI,aAEjD,sBAAMX,MAAM,SAAZ,SACI,uBAAOY,YAAY,gCAI/B,sBAAKZ,MAAM,oBAAX,UACI,qBAAKA,MAAM,uBAAX,SACKjC,EAAcsC,QAEnB,qBAAKL,MAAM,eAAX,SAtFO,SAACL,GACxB,GAAIA,EAAW,CACX,IAAMP,EAAOO,EAAUC,SACvB,MAAM,GAAN,OAAUR,EAAKS,cAAf,YAAgCT,EAAKU,WAAa,EAAlD,YAAuDV,EAAKW,YAoF3CL,CAAmB3B,EAAcqB,WAG1C,sBAAKY,MAAM,mBAAX,UACKjC,EAAcuC,QACf,sBAAKN,MAAM,mBAAX,0BACQjC,EAAckH,oBCI/BI,EApJE,WAGb,MAA8BvH,mBAAS,IAAvC,mBAAO6E,EAAP,KAAgBC,EAAhB,KACA,EAAgD9E,mBAAS,CACrDwC,QAAS,kCACTlB,KAAM,KACNiB,MAAO,+EACPiF,QAAQ,EACRL,KAAM,OACNM,OAAQ,uBANZ,mBAAOC,EAAP,KAAyBC,EAAzB,KAQA,EAA4C3H,mBAAS,IAArD,mBAIM4H,GAJN,UAImBlH,YAAWd,EAAW,aACnCsF,EAAU,uCAAG,sBAAA1E,EAAA,sEACSK,YAAQ+G,GADjB,cAEL9G,SAAQ,SAACC,GACf,IAAMqE,EAAY,2BACXrE,EAASE,QADE,IAEdC,GAAIH,EAASG,KAEjB4D,GAAW,SAAC3D,GAAD,OAAWiE,GAAX,mBAA4BjE,UAP5B,2CAAH,qDAYV0G,EAAoB,uCAAG,WAAOtC,GAAP,iBAAA/E,EAAA,sEAEfsH,EAAcrC,YAAI7F,EAAW,WAAZ,UAA2B2F,IAF7B,SAGaG,YAAOoC,GAHpB,OAGfC,EAHe,OAIrBJ,EAAoBI,EAAoB9G,QAJnB,gDAMrBQ,QAAQC,MAAM,kBAAd,MANqB,yDAAH,sDAwB1BC,qBAAU,WACNuD,MAED,IAGH,IASMtD,EAAqB,SAACC,GACxB,GAAIA,EAAW,CACX,IAAMP,EAAOO,EAAUC,SACvB,MAAM,GAAN,OAAUR,EAAKS,cAAf,YAAgCT,EAAKU,WAAa,EAAlD,YAAuDV,EAAKW,aAKpE,OACI,qCACI,qBAAKC,MAAM,OAAX,SACI,sBAAKA,MAAM,WAAX,UACI,qBAAKA,MAAM,WAAX,sBAGA,gCACK2C,EAAQzC,KAAI,SAAA4F,GAAQ,OACjB,sBAAK9F,MAAM,YAAYqC,QAAS,WAAQsD,EAAqBG,EAAS9G,KAAtE,UACI,qBAAKgB,MAAM,kBAAX,SAA8B8F,EAASC,SACvC,qBAAK/F,MAAM,iBAAX,SAA6B8F,EAASzF,QACtC,sBAAKL,MAAM,gBAAX,UACKN,EAAmBoG,EAAS1G,MAC7B,sBAAMY,MAAM,kBAAZ,SAA+B8F,EAASP,yBAOhE,kCACI,sBAAKvF,MAAM,cAAX,UACI,sBAAKA,MAAM,cAAX,UACI,qBAAKA,MAAM,gBAAX,SACI,sBAAMA,MAAM,QAAZ,SACI,qBAAKC,MAAM,OAAOS,IAAI,yBAAyBC,IAAI,qBAG3D,sBAAKX,MAAM,gBAAX,UACI,sBAAMA,MAAM,QAAZ,SACI,qBAAKC,MAAM,OAAOS,IAAI,mBAAmBC,IAAI,aAEjD,sBAAMX,MAAM,SAAZ,SACI,uBAAOY,YAAY,gCAI/B,sBAAKZ,MAAM,oBAAX,UACI,qBAAKA,MAAM,uBAAX,SACKwF,EAAiBnF,QAEtB,qBAAKL,MAAM,eAAX,SACKN,EAAmB8F,EAAiBpG,WAG7C,sBAAKY,MAAM,mBAAX,UACKwF,EAAiBlF,QAClB,qBAAKN,MAAM,OAAX,SACKwF,EAAiBD,YAG1B,sBAAKvF,MAAM,YAAX,UACI,qBAAKA,MAAM,aAAX,SACI,qBAAKC,MAAM,OAAOS,IAAI,0BAA0BC,IAAI,QAAQX,MAAM,oBAEtE,sBAAKA,MAAM,aAAX,gEAEI,qBAAKA,MAAM,OAAX,+CCLbgG,EAjIA,WAGX,MAA8BlI,mBAAS,IAAvC,mBAAO6E,EAAP,KAAgBC,EAAhB,KACA,EAA4C9E,mBAAS,CACjDwC,QAAS,kCACTlB,KAAM,KACNiB,MAAO,+EACPiF,QAAQ,EACRL,KAAM,OACNM,OAAQ,uBANZ,mBAAOtH,EAAP,KAAuBC,EAAvB,KAWM+H,EAAWzH,YAAWd,EAAW,UACjCsF,EAAU,uCAAG,sBAAA1E,EAAA,sEACSK,YAAQsH,GADjB,cAELrH,SAAQ,SAACC,GACf,IAAMqE,EAAY,2BACXrE,EAASE,QADE,IAEdC,GAAIH,EAASG,KAEjB4D,GAAW,SAAC3D,GAAD,OAAWiE,GAAX,mBAA4BjE,UAP5B,2CAAH,qDAYViH,EAAkB,uCAAG,WAAO7C,GAAP,iBAAA/E,EAAA,sEAEbC,EAAYgF,YAAI7F,EAAW,SAAZ,UAAyB2F,IAF3B,SAGaG,YAAOjF,GAHpB,OAGb4H,EAHa,OAInBjI,EAAkBiI,EAAkBpH,QAJjB,gDAMnBQ,QAAQC,MAAM,kBAAd,MANmB,yDAAH,sDAWxBC,qBAAU,WACNuD,MACD,IAGH,IASMtD,EAAqB,SAACC,GACxB,GAAIA,EAAW,CACX,IAAMP,EAAOO,EAAUC,SACvB,MAAM,GAAN,OAAUR,EAAKS,cAAf,YAAgCT,EAAKU,WAAa,EAAlD,YAAuDV,EAAKW,aAKpE,OACI,qCACI,qBAAKC,MAAM,OAAX,SACI,sBAAKA,MAAM,WAAX,UACI,qBAAKA,MAAM,WAAX,oBAGA,gCACK2C,EAAQzC,KAAI,SAAAC,GAAM,OACf,sBAAKH,MAAM,YAAYqC,QAAS,WAAQ6D,EAAmB/F,EAAOnB,KAAlE,UACI,qBAAKgB,MAAM,kBAAX,SAA8BG,EAAO4F,SACrC,qBAAK/F,MAAM,iBAAX,SAA6BG,EAAOE,QACpC,qBAAKL,MAAM,gBAAX,SAA4BN,EAAmBS,EAAOf,qBAM1E,kCACI,sBAAKY,MAAM,cAAX,UACI,qBAAKA,MAAM,UAAX,SACI,sBAAKA,MAAM,cAAX,UACI,qBAAKA,MAAM,gBAAX,SACI,sBAAMA,MAAM,QAAZ,SACI,qBAAKC,MAAM,OAAOS,IAAI,yBAAyBC,IAAI,qBAG3D,sBAAKX,MAAM,gBAAX,UACI,sBAAMA,MAAM,QAAZ,SACI,qBAAKC,MAAM,OAAOS,IAAI,mBAAmBC,IAAI,aAEjD,sBAAMX,MAAM,SAAZ,SACI,uBAAOY,YAAY,kCAKnC,sBAAKZ,MAAM,oBAAX,UACI,qBAAKA,MAAM,uBAAX,SACK/B,EAAeoC,QAEpB,qBAAKL,MAAM,eAAX,SACKN,EAAmBzB,EAAemB,WAG3C,qBAAKY,MAAM,mBAAX,SACK/B,EAAeqC,UAEpB,sBAAKN,MAAM,YAAX,UACI,qBAAKA,MAAM,aAAX,SACI,qBAAKC,MAAM,OAAOS,IAAI,0BAA0BC,IAAI,QAAQX,MAAM,oBAEtE,sBAAKA,MAAM,aAAX,6CAEI,qBAAKA,MAAM,OAAX,2CCIboG,EAvHA,WAMX3G,qBAHkB,WACdZ,SAASwH,cAAT,WAA2BC,IAAeC,MAAMC,MAAQ,YAEvC,IAGrB,IAAM3D,EAAUC,cAOhB,EAAsChF,mBAAS,aAA/C,mBAAOwI,EAAP,KAAoBG,EAApB,KAEMC,EAAY,SAACC,GAgBf,OAdI9H,SAASwH,cAAc,cAAcE,MAAMC,MAAQ,UACnD3H,SAASwH,cAAc,aAAaE,MAAMC,MAAQ,UAClD3H,SAASwH,cAAc,UAAUE,MAAMC,MAAQ,UAC/C3H,SAASwH,cAAc,aAAaE,MAAMC,MAAQ,UAClD3H,SAASwH,cAAc,WAAWE,MAAMC,MAAQ,UAIhD3H,SAASwH,cAAT,WAA2BM,IAAQJ,MAAMC,MAAQ,UAM7CG,GACJ,IAAI,YACAF,EAAeE,GACf9D,EAAQc,KAAK,CACTlD,SAAU,IACVmG,MAAO,CAAEN,YAAaA,KAE1B,MACJ,IAAI,WACAG,EAAeE,GACf9D,EAAQc,KAAK,CACTlD,SAAU,YACVmG,MAAO,CAAEN,YAAaA,KAE1B,MACJ,IAAI,QACAG,EAAeE,GACf9D,EAAQc,KAAK,CACTlD,SAAU,SACVmG,MAAO,CAAEN,YAAaA,KAE1B,MACJ,IAAI,WACAG,EAAeE,GACf9D,EAAQc,KAAK,CACTlD,SAAU,YACVmG,MAAO,CAAEN,YAAaA,KAE1B,MACJ,IAAI,SACAG,EAAeE,GACf9D,EAAQc,KAAK,CACTlD,SAAU,UACVmG,MAAO,CAAEN,YAAaA,OAQtC,OACI,qCACI,sBAAKtH,GAAG,WAAWqD,QAAS,WAAQqE,EAAU,cAA9C,UACI,uBAAM1G,MAAM,OAAZ,UACI,sBAAMA,MAAM,WAAZ,mBADJ,UAIA,qBAAKA,MAAM,YAAX,+DAIJ,sBAAKA,MAAM,SAAX,UACI,sBAAKA,MAAM,WAAX,UACI,uBAAMA,MAAM,gBAAZ,UAA6BzC,EAAYsJ,YAAYC,YAArD,aAA0E,uBAC1E,sBAAM9G,MAAM,gBAAZ,SAA6BzC,EAAYsJ,YAAY7F,WAEzD,qBAAKhB,MAAM,UAAUqC,QAjFX,WAClB9E,EAAYwJ,UACZlE,EAAQc,KAAK,MA+EL,sBACA,qBAAK3D,MAAM,WAAX,SACI,qBAAIA,MAAM,SAAV,UACI,qBAAKA,MAAM,OAAOhB,GAAG,YAArB,SACI,oBAAIqD,QAAS,WAAQqE,EAAU,cAA/B,0BAEJ,qBAAK1G,MAAM,OAAOhB,GAAG,WAArB,SACI,oBAAIqD,QAAS,WAAQqE,EAAU,aAA/B,wBAEJ,qBAAK1G,MAAM,OAAOhB,GAAG,QAArB,SACI,oBAAIqD,QAAS,WAAQqE,EAAU,UAA/B,qBAEJ,qBAAK1G,MAAM,OAAOhB,GAAG,WAArB,SACI,oBAAIqD,QAAS,WAAQqE,EAAU,aAA/B,wBAEJ,qBAAK1G,MAAM,OAAOhB,GAAG,SAArB,SACI,oBAAIqD,QAAS,WAAQqE,EAAU,WAA/B,kCChCbM,EApEG,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAGjB,EAA4BnJ,oBAAS,GAArC,mBAAOoJ,EAAP,KAAeC,EAAf,KAYMC,EAAmB,WACjBC,OAAOC,YAAc,KACrBzI,SAASwH,cAAc,WAAWE,MAAMgB,QAAU,OAClDJ,GAAU,KAEVtI,SAASwH,cAAc,WAAWE,MAAMgB,QAAU,QAClDJ,GAAU,KAclB,OAVA1H,qBAAU,WACN,GAAIwH,EAGA,OAFAI,OAAOG,iBAAiB,SAAUJ,GAClCvI,SAASwH,cAAc,WAAWmB,iBAAiB,QAASJ,GACrD,WACHC,OAAOI,oBAAoB,SAAUL,MAG9C,IAIC,aADA,CACC,IAAD,CAAeM,SAAS,aAAxB,SACI,cAAC,IAAD,UAEQT,EACM,qCACE,qBAAMjH,MAAM,UAAUqC,QAtCvB,WACf6E,GACArI,SAASwH,cAAc,WAAWE,MAAMgB,QAAU,OAClDJ,GAAU,KAEVtI,SAASwH,cAAc,WAAWE,MAAMgB,QAAU,QAClDJ,GAAU,KAgCM,SACI,sBAAMnH,MAAM,OAAZ,SACI,qBAAKC,MAAM,OAAOS,IAAI,iBAAiBC,IAAI,qBAGnD,sBAAKX,MAAM,MAAX,UACI,8BACI,cAAC2H,EAAD,MAEJ,cAAE,IAAF,CAAQ9C,OAAK,EAACD,KAAK,IAAIE,UAAWlH,IAClC,cAAE,IAAF,CAAQgH,KAAK,YAAYE,UAAWT,IACpC,cAAE,IAAF,CAAQO,KAAK,SAASE,UAAWC,IACjC,cAAE,IAAF,CAAQH,KAAK,YAAYE,UAAWO,IACpC,cAAE,IAAF,CAAQT,KAAK,UAAUE,UAAWkB,OAEtC,qBAAKhG,MAAM,YAAX,SACI,uDAA2B,IAAI+D,MAAOlE,sBAG5C,cAAC,IAAD,CAAOgF,MAAM,QAAQD,KAAK,IAA1B,SAA8B,cAAC,EAAD,WCjCzCgD,MA/Bf,WACE,MAAwB9J,oBAAS,GAAjC,mBAAO+J,EAAP,KAAaC,EAAb,KACA,EAAoChK,oBAAS,GAA7C,mBAAOmJ,EAAP,KAAmBc,EAAnB,KAYA,OAXAtI,qBAAU,WACRlC,EAAYyK,oBAAmB,SAACC,GAE5BF,IADEE,GAKJH,GAAQ,QAET,IAGD,mCACGD,EAAO,cAAC,EAAD,CAAWZ,WAAYA,IAC7B,mCACE,sBAAKjH,MAAM,UAAX,UACE,sBAAKA,MAAM,OAAX,UACE,sBAAMA,MAAM,WAAZ,mBADF,UAIA,qBAAKA,MAAM,mBAAX,gCC3BZkI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvJ,SAASwJ,eAAe,W","file":"static/js/main.a0cc3837.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst firebaseApp = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nexport const authService = getAuth();\nexport const dbService = getFirestore();","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { dbService } from 'fbase';\nimport { collection, getDocs } from \"firebase/firestore\";\n\nconst Home = ({ match }) => {\n    const [studyContents, setStudyContents] = useState([]);\n    const [noticeContents, setNoticeContents] = useState([]);\n    const [homeworkContents, setHomeworkContents] = useState([]);\n\n    //최근 수업 정보 받아오기 \n    const sendContents = async () => {\n        try {\n            const noticeRef = collection(dbService, \"notice\");\n            const studyRef = collection(dbService, \"study\");\n            const homeworkRef = collection(dbService, \"homework\");\n\n            const getNoticeContents = await getDocs(noticeRef);\n            getNoticeContents.forEach((document) => {\n                const noticeObject = {\n                    ...document.data(),\n                    id: document.id,\n                };\n                setNoticeContents((prev) => [noticeObject, ...prev].sort(function (a, b) { return b.date - a.date }));\n            });\n\n            const getStudyContents = await getDocs(studyRef);\n            getStudyContents.forEach((document) => {\n                const studyObject = {\n                    ...document.data(),\n                    id: document.id,\n                };\n                setStudyContents((prev) => [studyObject, ...prev].sort(function (a, b) { return b.date - a.date }));\n            });\n\n            const getHomeworkContents = await getDocs(homeworkRef);\n            getHomeworkContents.forEach((document) => {\n                const homeworkObject = {\n                    ...document.data(),\n                    id: document.id,\n                };\n                setHomeworkContents((prev) => [homeworkObject, ...prev].sort(function (a, b) { return b.date - a.date }));\n            });\n\n        } catch (e) {\n            console.error(\"Error onClick: \", e);\n        }\n    };\n\n    useEffect(() => {\n        sendContents();\n    }, []);\n\n    // 타임스템프 to date (yy.mm.dd)\n    const stampToDate_yymmdd = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n        }\n        return;\n    };\n\n    return (\n        <>\n            <div class=\"list\">\n                <div class=\"listForm\">\n                    <div class=\"currMenu\">\n                        MY CLASSES\n                    </div>\n                    <div class=\"listClassName\">\n                        한국어센터 \b1급 2반\n                    </div>\n                    <div class=\"teacherForm\">\n                        <div class=\"teacherPhoto\">\n                            <img class=\"teacherJPG\" width=\"auto\" width=\"150px\" src=\"./img/teacher.png\" alt=\"teacher\" />\n                        </div>\n                        <div class=\"teacherInfo\">\n                            <span class=\"teacherTag\">NAME</span><br />\n                            <span class=\"teacherContent\">정다빈</span><br />\n                            <span class=\"teacherTag\">E-MAIL</span><br />\n                            <span class=\"teacherContent\">malgolil41@gmail.com</span><br />\n                            <span class=\"teacherTag2\">\n                                ✉️ Send Message\n                            </span>\n                        </div></div>\n                    <h2>NOTICE & HOMEWORK</h2>\n                    <div class=\"nnhForm\">\n                        <ul class=\"nnhForm__notice\">\n                            {noticeContents.map((notice, i) =>\n                                i < 3 ?\n                                    <li class=\"nnhForm__notice--content\">\n                                        <div class=\"nnhForm__notice--content-titlebox\">\n                                            <span class=\"nnhForm__notice--content-title\">{notice.title}</span>\n                                            <span class=\"nnhForm__notice--content-date\">{stampToDate_yymmdd(notice.date)}</span>\n                                        </div>\n                                        <span class=\"nnhForm__notice--content-text\">{notice.content}</span>\n                                    </li>\n                                    : ''\n                            )}\n                        </ul>\n                        <ul class=\"nnhForm__homework\">\n                            {homeworkContents.map((homework, i) =>\n                                i < 2 ?\n                                    (i + 1) % 2 !== 0 ?\n                                        <Link to={{ pathname: `/Homework/${homework.id}` }}>\n                                            <li class=\"nnhForm__homework--box\">\n                                                <span class=\"nnhForm__homework--box-title\">{homework.title}</span>\n                                                <span class=\"nnhForm__homework--box-date\">{stampToDate_yymmdd(homework.date)}</span>\n                                            </li>\n                                        </Link>\n                                        :\n                                        <Link to={{ pathname: `/Homework/${homework.id}` }}>\n                                            <li class=\"nnhForm__homework--box2\">\n                                                <span class=\"nnhForm__homework--box-title\">{homework.title}</span>\n                                                <span class=\"nnhForm__homework--box-date\">{stampToDate_yymmdd(homework.date)}</span>\n                                            </li>\n                                        </Link>\n                                    : ''\n                            )}\n\n\n                        </ul>\n                    </div>\n                    <h2>CALENDER</h2>\n                    <div class=\"calender\">\n                        달력\n                    </div>\n                </div>\n            </div>\n            <article>\n                <div class=\"articleForm\">\n                    <div class=\"noti_search\">\n                        <div class=\"noti_search_n\">\n                            <span class=\"icon2\">\n                                <img width=\"20px\" src='./img/notification.png' alt=\"notification\" />\n                            </span>\n                        </div>\n                        <div class=\"noti_search_s\">\n                            <span class=\"icon2\">\n                                <img width=\"20px\" src='./img/search.png' alt=\"search\" />\n                            </span>\n                            <span class=\"search\">\n                                <input placeholder=\"Search for anything\" />\n                            </span>\n                        </div>\n                    </div>\n                    <h2>LAST CLASS</h2>\n                    <div class=\"lastClass\">\n                        <div class=\"lastClass_icon\">\n                            <img height=\"100px\" src='./img/class.png' alt=\"next class\" />\n                        </div>\n                        <div class=\"lastClass_content\">\n                            <span class=\"class_title\">지난 수업</span>\n                            <div class=\"class_contents\">{studyContents.map((data, i) => i === 0 ? data.title : '')}</div>\n                        </div>\n                    </div>\n                    <h2>NEXT CLASS</h2>\n                    <div class=\"nextClass\">\n                        <div class=\"nextClass_content\">\n                            <span class=\"class_title\">다음 수업</span>\n                            <span class=\"class_contents\">{studyContents.map((data, i) => i === 0 ? data.next : '')}</span>\n                        </div>\n                        <div class=\"nextClass_icon\">\n                            <img height=\"100px\" src='./img/nextclass.png' alt=\"next class\" />\n                        </div>\n                    </div>\n                </div>\n            </article>\n        </>\n    );\n};\n\nexport default Home;","import React, { useState } from \"react\";\nimport 'css/login.css';\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup, GithubAuthProvider } from \"firebase/auth\";\n\n\nconst Login = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const { target: { name, value } } = event;\n        if (name === \"email\") {\n            setEmail(value)\n        } else if (name === \"password\") {\n            setPassword(value)\n        }\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            const auth = getAuth();\n            let data;\n            if (newAccount) {\n                //Create Account\n                data = await createUserWithEmailAndPassword(auth, email, password);\n            } else {\n                //Login\n                data = await signInWithEmailAndPassword(auth, email, password);\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n\n        }\n    }\n\n    const toggleAccount = () => setNewAccount((prev) => !prev)\n    const onSocialClick = (event) => {\n        const { target: { name } } = event;\n        const auth = getAuth();\n        if (name === \"google\") {\n            const provider = new GoogleAuthProvider();\n            signInWithPopup(auth, provider)\n        } else if (name === \"github\") {\n            const provider = new GithubAuthProvider();\n            signInWithPopup(auth, provider)\n        }\n    }\n\n    return (\n        <>\n            <form class=\"login\" onSubmit={onSubmit}>\n                <div class=\"logoForm\">\n                    <span class=\"logo\">\n                        <span class=\"logoWork\">Class</span>\n                        <span >\n                            Work\n                        </span>\n                    </span>\n                    <div class=\"className\">\n                        한국어센터 1급 2반\n                    </div>\n                </div>\n                <div class=\"idForm\">\n                    <input\n                        name=\"email\"\n                        type=\"email\"\n                        class=\"id\"\n                        placeholder=\"Email\"\n                        value={email}\n                        onChange={onChange} />\n                </div>\n                <div class=\"pwForm\">\n                    <input\n                        name=\"password\"\n                        type=\"password\"\n                        class=\"pw\"\n                        required=\"required\"\n                        value={password}\n                        onChange={onChange}\n                        placeholder=\"Password\" />\n                </div>\n                <div class=\"loginButton\">\n                    <input\n                        type=\"submit\"\n                        value={newAccount ? \"Create Account\" : \"LOGIN\"}\n                        class=\"btn\" />\n                </div>\n                <span class=\"joinAccount\" onClick={toggleAccount}>{newAccount ? \"LOGIN 화면으로 이동\" : \"SIGN UP 화면으로 이동\"}</span>\n                <div class=\"google\">\n                    <button name=\"google\" class=\"googleBTN\" onClick={onSocialClick}>Continue With Google</button>\n                </div>\n            </form>\n        </>\n    );\n\n}\n\nexport default Login;","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from 'react-router';\nimport { dbService } from 'fbase';\nimport { collection, addDoc, doc, getDocs, getDoc, orderBy, serverTimestamp } from \"firebase/firestore\"\n\nconst HomeworkList = () => {\n    const [submits, setSubmits] = useState([]);\n    const history = useHistory();\n\n    //숙제 리스트 받아오기\n    const homeworkDB = collection(dbService, \"homework\")\n    const getSubmits = async () => {\n        const dbSubmits = await getDocs(homeworkDB, orderBy(\"deadline\"));\n        dbSubmits.forEach((document) => {\n            const submitObject = {\n                ...document.data(),\n                id: document.id,\n            };\n            setSubmits((prev) => [submitObject, ...prev].sort(function (a, b) { return b.deadline - a.deadline }));\n        });\n    };\n\n    //숙제 클릭하면 \b내용 페이지로 전달 (onClick Event)\n    const sendHWContents = async (key) => {\n        try {\n            const HWref = doc(dbService, \"homework\", `${key}`);\n            const getHWContents = await getDoc(HWref);\n            console.log(getHWContents.data());  //\b 클릭한 부분의 값을 잘 가져오고 있음.\n            const HWContentsData = getHWContents.data();\n            // setHWContents(getHWContents.data());\n            history.location.pathname === \"/Homework\" ?\n                history.push({\n                    pathname: `Homework/${key}`,\n                    // state: {\n                    //     type: HWContentsData.type,\n                    //     deadline: HWContentsData.deadline,\n                    //     date: HWContentsData.date,\n                    //     content: HWContentsData.content,\n                    //     title: HWContentsData.title,\n                    //     key\n                    // }\n                })\n                :\n                history.push({\n                    pathname: `${key}`,\n                    // state: {\n                    //     type: HWContentsData.type,\n                    //     deadline: HWContentsData.deadline,\n                    //     date: HWContentsData.date,\n                    //     content: HWContentsData.content,\n                    //     title: HWContentsData.title,\n                    //     key\n                    // }\n                })\n        } catch (e) {\n            console.error(\"Error onClick: \", e);\n        }\n    };\n\n    //db값 얻어오기 useEffect\n    useEffect(() => {\n        getSubmits();\n    }, [])\n\n    // 타임스템프 변환\n    const stampToDate = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getMonth() + 1}/${date.getDate()}`;\n        }\n        return;\n    };\n\n    // 타임스템프 to date (yy.mm.dd)\n    const stampToDate_yymmdd = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n        }\n        return;\n    };\n\n    //숙제 마감 여부 계산\n    const chkDeadline = (deadline) => {\n        const today = new Date();\n        if (deadline.toDate() < today) {\n            return `🔚 마감 되었습니다.`\n        } else {\n            return `✔ 숙제를 내세요.`\n        }\n    }\n\n    return (\n        <>\n            {/* 숙제 리스트 */}\n            {submits.map((homework, i) =>\n                i % 2 === 0 ?\n                    <div className=\"homeworkListForm\" key={homework.id} onClick={() => { sendHWContents(homework.id) }}>\n                        <div className=\"homeworkListForm_l\">\n                            <div className=\"homeworkListDate\">\n                                ~{stampToDate(homework.deadline)}\n                            </div>\n                        </div>\n                        <div className=\"homeworkListForm_r\">\n                            <div className=\"homeworkListTag\">\n                                waiting\n                            </div>\n                            <div className=\"homeworkListTitle\">\n                                {homework.type}\n                            </div>\n                            <div className=\"homeworkListTitle\">\n                                {homework.content}\n                            </div>\n                            <div className=\"homeworkListMTag\">\n                                {chkDeadline(homework.deadline)}\n                            </div>\n                        </div>\n                    </div>\n                    :\n                    <div className=\"homeworkListForm2\" key={homework.id} onClick={() => { sendHWContents(homework.id) }}>\n                        <div className=\"homeworkListForm_l\">\n                            <div className=\"homeworkListDate\">\n                                ~{stampToDate(homework.deadline)}\n                            </div>\n                        </div>\n                        <div className=\"homeworkListForm_r\">\n                            <div className=\"homeworkListTag\">\n                                waiting\n                            </div>\n                            <div className=\"homeworkListTitle\">\n                                {homework.type}\n                            </div>\n                            <div className=\"homeworkListTitle\">\n                                {homework.content}\n                            </div>\n                            <div className=\"homeworkListMTag\">\n                                {chkDeadline(homework.deadline)}\n                            </div>\n                        </div>\n                    </div>\n            )}\n        </>\n    )\n}\n\nexport default HomeworkList;","import React, { useState, useEffect } from \"react\";\nimport { dbService } from 'fbase';\nimport { collection, doc, getDoc } from \"firebase/firestore\"\n\nconst HomeworkDetail = ({ match }) => {\n\n    //useState\n    const [HWContents, setHWContents] = useState({});\n\n    //DB Load\n    const homeworkDB = collection(dbService, \"homework\")\n\n    const key = match.params.id;\n\n    //본문 내용 읽어오기 (onClick Event)\n    const sendHWContents = async () => {\n        try {\n            const HWref = doc(dbService, \"homework\", `${key}`);\n            const getHWContents = await getDoc(HWref);\n            setHWContents(getHWContents.data());\n        } catch (e) {\n            console.error(\"Error onClick: \", e);\n        }\n    };\n\n    useEffect(() => {\n        sendHWContents();\n    }, [key])\n\n    // 타임스템프 to date (yy.mm.dd)\n    const stampToDate_yymmdd = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n        }\n        return;\n    };\n\n    return (\n        <>\n            <div className=\"homeworkTitleDate\">\n                <div className=\"homeworkContentTitle\">\n                    <span className=\"homeworkContentTitle__type\">{HWContents.type}</span>\n                    <span className=\"homeworkContentTitle__text\">{HWContents.title}</span>\n                </div>\n                <div className=\"homeworkDate\">\n                    {stampToDate_yymmdd(HWContents.date)}\n                </div>\n            </div>\n            <div className=\"homeworkContents\">\n                {HWContents.content}\n            </div>\n            <div className=\"homeworkSubmit\">\n                <div className=\"homeworkSubmitL\">\n                    <img width=\"50px\" src=\"../img/send.png\" alt=\"send\" />\n                </div>\n                <div className=\"homeworkSubmitR\">\n                    숙제 제출\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default HomeworkDetail;","import React, { useEffect, useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { dbService } from 'fbase';\nimport { collection, addDoc, doc, getDocs, getDoc, orderBy, serverTimestamp } from \"firebase/firestore\";\nimport HomeworkList from 'routes/Homework/HomeworkList';\nimport HomeworkDetail from 'routes/Homework/HomeworkDetail';\n\n\nconst Homework = ({ match }, key) => {\n    //useState\n    const [submit, setSubmit] = useState(\"\");\n    const [submits, setSubmits] = useState([]);\n    const [HWContents, setHWContents] = useState({\n        content: \"숙제를 선택하면 내용이 나옵니다. \",\n        date: null,\n        title: \"숙제를 선택해 주세요.\",\n        type: \"\",\n    });\n\n    //숙제 리스트 받아오기\n    const homeworkDB = collection(dbService, \"homework\")\n    const getSubmits = async () => {\n        const dbSubmits = await getDocs(homeworkDB, orderBy(\"deadline\"));\n        dbSubmits.forEach((document) => {\n            const submitObject = {\n                ...document.data(),\n                id: document.id,\n            };\n            setSubmits((prev) => [submitObject, ...prev].sort(function (a, b) { return b.deadline - a.deadline }));\n        });\n    };\n\n    //본문 내용 읽어오기 (onClick Event)\n    const sendHWContents = async (key) => {\n        try {\n            const HWref = doc(dbService, \"homework\", `${key}`);\n            const getHWContents = await getDoc(HWref);\n            console.log(getHWContents.data());  //\b 클릭한 부분의 값을 잘 가져오고 있음.\n            setHWContents(getHWContents.data());\n        } catch (e) {\n            console.error(\"Error onClick: \", e);\n        }\n    };\n\n    //db값 얻어오기 useEffect\n    useEffect(() => {\n        getSubmits();\n    }, []);\n\n    //\bCreate DB\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const docRef = await addDoc(collection(dbService, \"homework\"), {\n                content: submit,\n                date: serverTimestamp(),\n                type: `type`,\n                title: submit,\n                deadline: serverTimestamp()\n\n            });\n            console.log(\"Document written with ID: \", docRef.id);\n        } catch (error) {\n            console.error(\"Error adding document: \", error);\n        }\n        setSubmit(\"\");\n    }\n\n    const onChange = (event) => {\n        const { target: { value }, } = event;\n        setSubmit(value);\n    };\n\n    // 타임스템프 변환\n    const stampToDate = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getMonth() + 1}/${date.getDate()}`;\n        }\n        return;\n    };\n\n    // 타임스템프 to date (yy.mm.dd)\n    const stampToDate_yymmdd = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n        }\n        return;\n    };\n\n    //숙제 마감 여부 계산\n    const chkDeadline = (deadline) => {\n        const today = new Date();\n        if (deadline.toDate() < today) {\n            return `🔚 마감 되었습니다.`\n        } else {\n            return `✔ 숙제를 내세요.`\n        }\n    }\n\n    // 본 내용\n    return (\n        <>\n            {/* 중앙 레이아웃 */}\n            <div className=\"list\">\n                <div className=\"listForm\">\n                    <div className=\"currMenu\">\n                        HOMEWORK\n                    </div>\n                    {/* 글쓰기(임시) */}\n                    <form onSubmit={onSubmit}>\n                        <input value={submit} onChange={onChange} type=\"text\" placeholder=\"testInput\" maxLength={120} />\n                        <input type=\"submit\" value=\"Submit\" />\n                    </form>\n                    {/* 숙제 리스트 \b부분 */}\n                    <HomeworkList\n                        submit\n                        submits\n                        HWContents\n                        sendHWContents\n                    />\n                </div>\n            </div>\n\n            {/* 우측 레이아웃 */}\n            <article>\n                <div className=\"articleForm\">\n                    <div className=\"noti_search\">\n                        <div className=\"noti_search_n\">\n                            <span className=\"icon2\">\n                                {match.path === \"/Homework\" ?\n                                    <img width=\"20px\" src='./img/notification.png' alt=\"notification\" />\n                                    :\n                                    <img width=\"20px\" src='../img/notification.png' alt=\"notification\" />\n                                }\n                            </span>\n                        </div>\n                        <div className=\"noti_search_s\">\n                            <span className=\"icon2\">\n                                <img width=\"20px\" src='./img/search.png' alt=\"search\" />\n                            </span>\n                            <span className=\"search\">\n                                <input placeholder=\"Search for anything\" />\n                            </span>\n                        </div>\n                    </div>\n                    <Route exact path={`${match.path}`}><p>메뉴를 선택하세요.</p></Route>\n                    <Route\n                        path={`${match.path}/:id`}\n                        component={HomeworkDetail}\n                    />\n                </div>\n            </article>\n        </>\n    );\n\n};\n\nexport default Homework;","import React, { useEffect, useState } from \"react\";\nimport { dbService } from 'fbase';\nimport { collection, doc, getDocs, getDoc } from \"firebase/firestore\";\n\nconst Study = () => {\n    //useState\n    const [submits, setSubmits] = useState([]);\n    const [studyContents, setStudyContents] = useState({\n        chapter: \"1과\",\n        content: \"내용입니다.\",\n        date: null,\n        title: \"보고 싶은 내용을 선택하세요.\",\n        type: \"\",\n        page: \"page\",\n    });\n\n    //숙제 리스트 받아오기\n    const homeworkDB = collection(dbService, \"study\")\n    const getSubmits = async () => {\n        const dbSubmits = await getDocs(homeworkDB);\n        dbSubmits.forEach((document) => {\n            const submitObject = {\n                ...document.data(),\n                id: document.id,\n            };\n            setSubmits((prev) => [submitObject, ...prev]);\n        });\n    };\n\n    //본문 내용 읽어오기 (onClick Event)\n    const sendStudyContents = async (key) => {\n        try {\n            const studyRef = doc(dbService, \"study\", `${key}`);\n            const getStudyContents = await getDoc(studyRef);\n            setStudyContents(getStudyContents.data());\n        } catch (e) {\n            console.error(\"Error onClick: \", e);\n        }\n    };\n\n    //db값 얻어오기 useEffect\n    useEffect(() => {\n        getSubmits();\n    }, []);\n\n    // 타임스템프 변환\n    const stampToDate = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getMonth() + 1}/${date.getDate()}`;\n        }\n        return;\n    };\n\n    // 타임스템프 to date (yy.mm.dd)\n    const stampToDate_yymmdd = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n        }\n        return;\n    };\n\n\n    return (\n        <>\n            <div class=\"list\">\n                <div class=\"listForm\">\n                    <div class=\"currMenu\">\n                        STUDY\n                    </div>\n                    {submits.map((study, i) =>\n                        i % 2 === 0 ?\n                            <div class=\"homeworkListForm\" onClick={() => { sendStudyContents(study.id) }}>\n                                <div class=\"homeworkListForm_l\">\n                                    <div class=\"homeworkListDate\">\n                                        {stampToDate(study.date)}\n                                    </div>\n                                </div>\n                                <div class=\"homeworkListForm_r\">\n                                    <div class=\"homeworkListTag\">\n                                        {study.chapter}\n                                    </div>\n                                    <div class=\"homeworkListTitle\">\n                                        {study.type}\n                                    </div>\n                                    <div class=\"homeworkListTitle\">\n                                        {study.type}\n                                    </div>\n                                    <div class=\"homeworkListMTag\">\n                                        📚 {study.page}\n                                    </div>\n                                </div>\n                            </div>\n                            :\n                            <div class=\"homeworkListForm2\" onClick={() => { sendStudyContents(study.id) }}>\n                                <div class=\"homeworkListForm_l\">\n                                    <div class=\"homeworkListDate\">\n                                        {stampToDate(study.date)}\n                                    </div>\n                                </div>\n                                <div class=\"homeworkListForm_r\">\n                                    <div class=\"homeworkListTag\">\n                                        {study.chapter}\n                                    </div>\n                                    <div class=\"homeworkListTitle\">\n                                        {study.type}\n                                    </div>\n                                    <div class=\"homeworkListTitle\">\n                                        {study.type}\n                                    </div>\n                                    <div class=\"homeworkListMTag\">\n                                        📚 {study.page}\n                                    </div>\n                                </div>\n                            </div>\n                    )}\n\n                </div>\n            </div>\n            <article>\n                <div class=\"articleForm\">\n                    <div class=\"noti_search\">\n                        <div class=\"noti_search_n\">\n                            <span class=\"icon2\">\n                                <img width=\"20px\" src='./img/notification.png' alt=\"notification\" />\n                            </span>\n                        </div>\n                        <div class=\"noti_search_s\">\n                            <span class=\"icon2\">\n                                <img width=\"20px\" src='./img/search.png' alt=\"search\" />\n                            </span>\n                            <span class=\"search\">\n                                <input placeholder=\"Search for anything\" />\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"homeworkTitleDate\">\n                        <div class=\"homeworkContentTitle\">\n                            {studyContents.title}\n                        </div>\n                        <div class=\"homeworkDate\">\n                            {stampToDate_yymmdd(studyContents.date)}\n                        </div>\n                    </div>\n                    <div class=\"homeworkContents\">\n                        {studyContents.content}\n                        <div class=\"homeworkListMTag\">\n                            📚 {studyContents.page}\n                        </div>\n                    </div>\n\n                </div>\n            </article>\n        </>\n    );\n\n};\n\nexport default Study;","import React, { useEffect, useState } from \"react\";\nimport { dbService } from 'fbase';\nimport { collection, doc, getDocs, getDoc } from \"firebase/firestore\";\n\nconst Question = () => {\n\n    //useState\n    const [submits, setSubmits] = useState([]);\n    const [questionContents, setQuestionContents] = useState({\n        content: \"내용입니다.\",\n        date: null,\n        title: \"보고 싶은 내용을 선택하세요.\",\n        secret: false,\n        page: \"page\",\n        writer: \"작성자\",\n    });\n    const [questionReplys, setQuestionReplys] = useState([]);\n\n\n    //숙제 리스트 받아오기\n    const questionDB = collection(dbService, \"question\")\n    const getSubmits = async () => {\n        const dbSubmits = await getDocs(questionDB);\n        dbSubmits.forEach((document) => {\n            const submitObject = {\n                ...document.data(),\n                id: document.id,\n            };\n            setSubmits((prev) => [submitObject, ...prev]);\n        });\n    };\n\n    //본문 내용 읽어오기 (onClick Event)\n    const sendQuestionContents = async (key) => {\n        try {\n            const questionRef = doc(dbService, \"question\", `${key}`);\n            const getQuestionContents = await getDoc(questionRef);\n            setQuestionContents(getQuestionContents.data());\n        } catch (e) {\n            console.error(\"Error onClick: \", e);\n        }\n    };\n\n    // 댓글 읽어오기(본문 내용 읽어오기에 이어서...)\n    // const questionReplyDB = collection(dbService, \"question/reply\")\n    // const getQuestionReplys = async () => {\n    //     const dbQuestionReplys = await getDocs(questionReplyDB);\n    //     dbQuestionReplys.forEach((document) => {\n    //         const questionReplyObject = {\n    //             ...document.data(),\n    //             id: document.id,\n    //         };\n    //         setQuestionReplys((prev) => [questionReplyObject, ...prev]);\n    //     });\n    // };\n\n    //db값 얻어오기 useEffect\n    useEffect(() => {\n        getSubmits();\n        // getQuestionReplys();\n    }, []);\n\n    // 타임스템프 변환\n    const stampToDate = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getMonth() + 1}/${date.getDate()}`;\n        }\n        return;\n    };\n\n    // 타임스템프 to date (yy.mm.dd)\n    const stampToDate_yymmdd = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n        }\n        return;\n    };\n\n    return (\n        <>\n            <div class=\"list\">\n                <div class=\"listForm\">\n                    <div class=\"currMenu\">\n                        QUESTION\n                    </div>\n                    <board>\n                        {submits.map(question =>\n                            <div class=\"boardForm\" onClick={() => { sendQuestionContents(question.id) }}>\n                                <div class=\"boardListNumber\">{question.number}</div>\n                                <div class=\"boardListTitle\">{question.title}</div>\n                                <div class=\"boardListDate\">\n                                    {stampToDate_yymmdd(question.date)}\n                                    <span class=\"boardListWriter\">{question.writer}</span>\n                                </div>\n                            </div>\n                        )}\n                    </board>\n                </div>\n            </div>\n            <article>\n                <div class=\"articleForm\">\n                    <div class=\"noti_search\">\n                        <div class=\"noti_search_n\">\n                            <span class=\"icon2\">\n                                <img width=\"20px\" src='./img/notification.png' alt=\"notification\" />\n                            </span>\n                        </div>\n                        <div class=\"noti_search_s\">\n                            <span class=\"icon2\">\n                                <img width=\"20px\" src='./img/search.png' alt=\"search\" />\n                            </span>\n                            <span class=\"search\">\n                                <input placeholder=\"Search for anything\" />\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"homeworkTitleDate\">\n                        <div class=\"homeworkContentTitle\">\n                            {questionContents.title}\n                        </div>\n                        <div class=\"homeworkDate\">\n                            {stampToDate_yymmdd(questionContents.date)}\n                        </div>\n                    </div>\n                    <div class=\"homeworkContents\">\n                        {questionContents.content}\n                        <div class=\"name\">\n                            {questionContents.writer}\n                        </div>\n                    </div>\n                    <div class=\"replyForm\">\n                        <div class=\"replyFormL\">\n                            <img width=\"50px\" src=\"./img/reply-message.png\" alt=\"reply\" class=\"replyImgStyle\" />\n                        </div>\n                        <div class=\"replyFormR\">\n                            의미가 조금 달라요.\n                            <div class=\"name\">\n                                선생님\n                            </div>\n                        </div>\n\n                    </div>\n\n                </div>\n            </article>\n        </>\n    );\n\n};\n\nexport default Question;","import React, { useEffect, useState } from \"react\";\nimport { dbService } from 'fbase';\nimport { collection, doc, getDocs, getDoc } from \"firebase/firestore\";\n\nconst Notice = () => {\n\n    //useState\n    const [submits, setSubmits] = useState([]);\n    const [noticeContents, setNoticeContents] = useState({\n        content: \"내용입니다.\",\n        date: null,\n        title: \"보고 싶은 내용을 선택하세요.\",\n        secret: false,\n        page: \"page\",\n        writer: \"작성자\",\n    });\n\n\n    //숙제 리스트 받아오기\n    const noticeDB = collection(dbService, \"notice\")\n    const getSubmits = async () => {\n        const dbSubmits = await getDocs(noticeDB);\n        dbSubmits.forEach((document) => {\n            const submitObject = {\n                ...document.data(),\n                id: document.id,\n            };\n            setSubmits((prev) => [submitObject, ...prev]);\n        });\n    };\n\n    //본문 내용 읽어오기 (onClick Event)\n    const sendNoticeContents = async (key) => {\n        try {\n            const noticeRef = doc(dbService, \"notice\", `${key}`);\n            const getNoticeContents = await getDoc(noticeRef);\n            setNoticeContents(getNoticeContents.data());\n        } catch (e) {\n            console.error(\"Error onClick: \", e);\n        }\n    };\n\n    //db값 얻어오기 useEffect\n    useEffect(() => {\n        getSubmits();\n    }, []);\n\n    // 타임스템프 변환\n    const stampToDate = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getMonth() + 1}/${date.getDate()}`;\n        }\n        return;\n    };\n\n    // 타임스템프 to date (yy.mm.dd)\n    const stampToDate_yymmdd = (timestamp) => {\n        if (timestamp) {\n            const date = timestamp.toDate();\n            return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n        }\n        return;\n    };\n\n    return (\n        <>\n            <div class=\"list\">\n                <div class=\"listForm\">\n                    <div class=\"currMenu\">\n                        NOTICE\n                    </div>\n                    <board>\n                        {submits.map(notice =>\n                            <div class=\"boardForm\" onClick={() => { sendNoticeContents(notice.id) }}>\n                                <div class=\"boardListNumber\">{notice.number}</div>\n                                <div class=\"boardListTitle\">{notice.title}</div>\n                                <div class=\"boardListDate\">{stampToDate_yymmdd(notice.date)}</div>\n                            </div>\n                        )}\n                    </board>\n                </div>\n            </div>\n            <article>\n                <div class=\"articleForm\">\n                    <div class=\"notiBar\">\n                        <div class=\"noti_search\">\n                            <div class=\"noti_search_n\">\n                                <span class=\"icon2\">\n                                    <img width=\"20px\" src='./img/notification.png' alt=\"notification\" />\n                                </span>\n                            </div>\n                            <div class=\"noti_search_s\">\n                                <span class=\"icon2\">\n                                    <img width=\"20px\" src='./img/search.png' alt=\"search\" />\n                                </span>\n                                <span class=\"search\">\n                                    <input placeholder=\"Search for anything\" />\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"homeworkTitleDate\">\n                        <div class=\"homeworkContentTitle\">\n                            {noticeContents.title}\n                        </div>\n                        <div class=\"homeworkDate\">\n                            {stampToDate_yymmdd(noticeContents.date)}\n                        </div>\n                    </div>\n                    <div class=\"homeworkContents\">\n                        {noticeContents.content}\n                    </div>\n                    <div class=\"replyForm\">\n                        <div class=\"replyFormL\">\n                            <img width=\"50px\" src=\"./img/reply-message.png\" alt=\"reply\" class=\"replyImgStyle\" />\n                        </div>\n                        <div class=\"replyFormR\">\n                            알겠습니다!!\n                            <div class=\"name\">\n                                \b린짱\n                            </div>\n                        </div>\n\n                    </div>\n\n                </div>\n            </article>\n        </>\n    );\n\n};\n\nexport default Notice;","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from 'react-router';\nimport { authService } from 'fbase';\n\nconst Layout = () => {\n\n    // 로딩되면 첫 번째 메뉴\n    const firstMenu = () => {\n        document.querySelector(`#${navCurrMenu}`).style.color = \"#3f3e3e\";\n    };\n    useEffect(firstMenu, []);\n\n    // 로그아웃 function\n    const history = useHistory();\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n\n    // 메뉴 onClick 이벤트\n    const [navCurrMenu, setNavCurrMenu] = useState(`MYCLASSES`)\n\n    const moveRoute = (menu) => {\n        const menuColorReset = () => {\n            document.querySelector(\"#MYCLASSES\").style.color = \"#cac9cd\";\n            document.querySelector(\"#HOMEWORK\").style.color = \"#cac9cd\";\n            document.querySelector(\"#STUDY\").style.color = \"#cac9cd\";\n            document.querySelector(\"#QUESTION\").style.color = \"#cac9cd\";\n            document.querySelector(\"#NOTICE\").style.color = \"#cac9cd\";\n        }\n\n        const currentMenuColorChange = () => {\n            document.querySelector(`#${menu}`).style.color = \"#3f3e3e\";\n        }\n\n        menuColorReset();\n        currentMenuColorChange();\n\n        switch (menu) {\n            case `MYCLASSES`:\n                setNavCurrMenu(menu);\n                history.push({\n                    pathname: \"/\",\n                    state: { navCurrMenu: navCurrMenu }\n                });\n                break;\n            case `HOMEWORK`:\n                setNavCurrMenu(menu);\n                history.push({\n                    pathname: \"/Homework\",\n                    state: { navCurrMenu: navCurrMenu }\n                });\n                break;\n            case `STUDY`:\n                setNavCurrMenu(menu);\n                history.push({\n                    pathname: \"/Study\",\n                    state: { navCurrMenu: navCurrMenu }\n                });\n                break;\n            case `QUESTION`:\n                setNavCurrMenu(menu);\n                history.push({\n                    pathname: \"/Question\",\n                    state: { navCurrMenu: navCurrMenu }\n                });\n                break;\n            case `NOTICE`:\n                setNavCurrMenu(menu);\n                history.push({\n                    pathname: \"/Notice\",\n                    state: { navCurrMenu: navCurrMenu }\n                });\n                break;\n            default:\n                break;\n        }\n\n    };\n    return (\n        <>\n            <div id=\"logoLink\" onClick={() => { moveRoute('MYCLASSES') }}>\n                <span class=\"logo\">\n                    <span class=\"logoWork\">Class</span>\n                    Work\n                </span>\n                <div class=\"className\">\n                    한국어센터 1급 2반\n                </div>\n            </div>\n            <div class=\"navBar\">\n                <div class=\"userInfo\">\n                    <span class=\"userInfo_name\">{authService.currentUser.displayName} 님</span><br />\n                    <span class=\"userInfo_info\">{authService.currentUser.email}</span>\n                </div>\n                <div class=\"signOut\" onClick={onLogOutClick}>SIGN OUT</div>\n                <div class=\"menuForm\">\n                    <ul class=\"ulMenu\">\n                        <div class=\"menu\" id=\"MYCLASSES\">\n                            <li onClick={() => { moveRoute('MYCLASSES') }}>MY CLASSES</li>\n                        </div>\n                        <div class=\"menu\" id=\"HOMEWORK\">\n                            <li onClick={() => { moveRoute('HOMEWORK') }}>HOMEWORK</li>\n                        </div>\n                        <div class=\"menu\" id=\"STUDY\">\n                            <li onClick={() => { moveRoute('STUDY') }}>STUDY</li>\n                        </div>\n                        <div class=\"menu\" id=\"QUESTION\">\n                            <li onClick={() => { moveRoute('QUESTION') }}>QUESTION</li>\n                        </div>\n                        <div class=\"menu\" id=\"NOTICE\">\n                            <li onClick={() => { moveRoute('NOTICE') }}>NOTICE</li>\n                        </div>\n                    </ul>\n                </div>\n            </div >\n        </>\n\n\n\n    );\n};\n\nexport default Layout;","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Router, Switch, Route } from \"react-router-dom\";\nimport Home from 'routes/Home';\nimport Login from 'routes/Login';\nimport Homework from 'routes/Homework';\nimport Study from 'routes/Study';\nimport Question from 'routes/Question'\nimport Notice from 'routes/Notice';\nimport Navigation from 'component/Navigation';\n\n\nconst AppRouter = ({ isLoggedIn }) => {\n\n    // 모바일 \b메뉴 열기, 닫기 스크립트\n    const [navBar, setNavBar] = useState(false);\n    const mobileMenuOpen = () => {\n        if (navBar) {\n            document.querySelector('.navBar').style.display = 'none';\n            setNavBar(false);\n        } else {\n            document.querySelector('.navBar').style.display = 'block';\n            setNavBar(true);\n        }\n    };\n\n    // 브라우저 resize할 때, 메뉴 open, close\n    const handleMobileMenu = () => {\n        if (window.innerWidth <= 800) {\n            document.querySelector('.navBar').style.display = 'none';\n            setNavBar(false);\n        } else {\n            document.querySelector('.navBar').style.display = 'block';\n            setNavBar(true);\n        }\n    };\n\n    useEffect(() => {\n        if (isLoggedIn) {\n            window.addEventListener('resize', handleMobileMenu);\n            document.querySelector('.ulMenu').addEventListener('click', handleMobileMenu);\n            return () => {\n                window.removeEventListener('resize', handleMobileMenu);\n            }\n        }\n    }, []);\n\n    return (\n        // <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <BrowserRouter basename=\"/classWork\">\n            <Switch>\n                {\n                    isLoggedIn\n                        ? <>\n                            < div class=\"menuBTN\" onClick={mobileMenuOpen}>\n                                <span class=\"icon\">\n                                    <img width=\"20px\" src='./img/list.png' alt=\"notification\" />\n                                </span>\n                            </div>\n                            <div class=\"box\">\n                                <nav>\n                                    <Navigation />\n                                </nav>\n                                < Route exact path=\"/\" component={Home} />\n                                < Route path=\"/Homework\" component={Homework} />\n                                < Route path=\"/Study\" component={Study} />\n                                < Route path=\"/Question\" component={Question} />\n                                < Route path=\"/Notice\" component={Notice} />\n                            </div>\n                            <div class=\"copyright\">\n                                <footer>&copy; Class Work {new Date().getFullYear()}</footer>\n                            </div>\n                        </>\n                        : <Route exact=\"exact\" path=\"/\"><Login /></Route>\n                }\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\nimport 'css/style.css'\nimport 'css/nav.css'\nimport 'css/view.css'\nimport 'css/list.css'\nimport AppRouter from 'component/Router';\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true)\n      } else {\n        setIsLoggedIn(false)\n      }\n      setInit(true);\n    })\n  }, []);\n\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={isLoggedIn} /> :\n        <>\n          <div class=\"loading\">\n            <div class=\"logo\">\n              <span class=\"logoWork\">Class</span>\n              Work\n            </div>\n            <div class=\"loading__message\">Loading...</div>\n          </div>\n        </>\n      }\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'component/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}